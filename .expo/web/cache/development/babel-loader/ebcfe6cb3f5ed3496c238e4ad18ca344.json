{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _expoModulesCore = require(\"expo-modules-core\");\nvar warningHasBeenShown = false;\nvar _default = {\n  addListener: function addListener() {\n    if (!warningHasBeenShown) {\n      console.warn(\"[expo-notifications] Notifications handling is not yet fully supported on \" + _expoModulesCore.Platform.OS + \". Handling notifications will have no effect.\");\n      warningHasBeenShown = true;\n    }\n  },\n  removeListeners: function removeListeners() {}\n};\nexports.default = _default;","map":{"version":3,"sources":["../src/NotificationsHandlerModule.ts"],"names":[],"mappings":";;;;AAAA;AAIA,IAAI,mBAAmB,GAAG,KAAK;AAAC,eAEjB;EACb,WAAW,EAAE,uBAAK;IAChB,IAAI,CAAC,mBAAmB,EAAE;MACxB,OAAO,CAAC,IAAI,gFACmE,yBAAQ,CAAC,EAAE,mDACzF;MACD,mBAAmB,GAAG,IAAI;IAC3B;EACH,CAAC;EACD,eAAe,EAAE,2BAAK,CAAE;CACK;AAAA","sourcesContent":["import { Platform } from 'expo-modules-core';\n\nimport { NotificationsHandlerModule } from './NotificationsHandlerModule.types';\n\nlet warningHasBeenShown = false;\n\nexport default {\n  addListener: () => {\n    if (!warningHasBeenShown) {\n      console.warn(\n        `[expo-notifications] Notifications handling is not yet fully supported on ${Platform.OS}. Handling notifications will have no effect.`\n      );\n      warningHasBeenShown = true;\n    }\n  },\n  removeListeners: () => {},\n} as NotificationsHandlerModule;\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}