{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useStateGetters;\nvar React = _interopRequireWildcard(require(\"react\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction useStateGetters() {\n  var stateGetters = React.useRef({});\n  var getStateForRoute = React.useCallback(function (routeKey) {\n    return stateGetters.current[routeKey] === undefined ? undefined : stateGetters.current[routeKey]();\n  }, [stateGetters]);\n  var addStateGetter = React.useCallback(function (key, getter) {\n    stateGetters.current[key] = getter;\n    return function () {\n      stateGetters.current[key] = undefined;\n    };\n  }, []);\n  return {\n    getStateForRoute: getStateForRoute,\n    addStateGetter: addStateGetter\n  };\n}","map":{"version":3,"sources":["useStateGetters.tsx"],"names":["useStateGetters","stateGetters","React","useRef","getStateForRoute","useCallback","routeKey","current","undefined","addStateGetter","key","getter"],"mappings":";;;;AAAA;AAAA;AAAA;AAOe,SAASA,eAAT,GAA2B;EACxC,IAAMC,YAAY,GAAGC,KAAK,CAACC,MAAND,CAAmD,CAAA,CAAnDA,CAArB;EAEA,IAAME,gBAAgB,GAAGF,KAAK,CAACG,WAANH,CACtBI,UAAAA,QAAD;IAAA,OACEL,YAAY,CAACM,OAAbN,CAAqBK,QAArBL,CAAAA,KAAmCO,SAAnCP,GACIO,SADJP,GAEIA,YAAY,CAACM,OAAbN,CAAqBK,QAArBL,CAAAA,EAJiBC;EAAAA,GAKvB,CAACD,YAAD,CALuBC,CAAzB;EAQA,IAAMO,cAAc,GAAG,KAAK,CAACJ,WAAN,CACrB,UAACK,GAAD,EAAcC,MAAd,EAA+C;IAC7CV,YAAY,CAACM,OAAbN,CAAqBS,GAArBT,CAAAA,GAA4BU,MAA5BV;IAEA,OAAO,YAAM;MAEXA,YAAY,CAACM,OAAbN,CAAqBS,GAArBT,CAAAA,GAA4BO,SAA5BP;IACD,CAHD;EAID,CARoB,EASrB,EATqB,CAAvB;EAYA,OAAO;IACLG,gBADK,EACLA,gBADK;IAELK,cAAAA,EAAAA;EAFK,CAAP;AAID","sourcesContent":["import * as React from 'react';\nimport { NavigatorStateGetter } from './NavigationBuilderContext';\n\n/**\n * Hook which lets child navigators add getters to be called for obtaining rehydrated state.\n */\n\nexport default function useStateGetters() {\n  const stateGetters = React.useRef<Record<string, NavigatorStateGetter>>({});\n\n  const getStateForRoute = React.useCallback(\n    (routeKey: string) =>\n      stateGetters.current[routeKey] === undefined\n        ? undefined\n        : stateGetters.current[routeKey](),\n    [stateGetters]\n  );\n\n  const addStateGetter = React.useCallback(\n    (key: string, getter: NavigatorStateGetter) => {\n      stateGetters.current[key] = getter;\n\n      return () => {\n        // @ts-ignore\n        stateGetters.current[key] = undefined;\n      };\n    },\n    []\n  );\n\n  return {\n    getStateForRoute,\n    addStateGetter,\n  };\n}\n"]},"metadata":{},"sourceType":"script"}