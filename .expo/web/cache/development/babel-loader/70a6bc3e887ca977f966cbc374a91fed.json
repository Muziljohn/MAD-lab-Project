{"ast":null,"code":"import * as React from 'react';\nexport default function useStateGetters() {\n  var stateGetters = React.useRef({});\n  var getStateForRoute = React.useCallback(function (routeKey) {\n    return stateGetters.current[routeKey] === undefined ? undefined : stateGetters.current[routeKey]();\n  }, [stateGetters]);\n  var addStateGetter = React.useCallback(function (key, getter) {\n    stateGetters.current[key] = getter;\n    return function () {\n      stateGetters.current[key] = undefined;\n    };\n  }, []);\n  return {\n    getStateForRoute: getStateForRoute,\n    addStateGetter: addStateGetter\n  };\n}","map":{"version":3,"sources":["useStateGetters.tsx"],"names":["React","useStateGetters","stateGetters","useRef","getStateForRoute","useCallback","routeKey","current","undefined","addStateGetter","key","getter"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAOA,eAAe,SAASC,eAAT,GAA2B;EACxC,IAAMC,YAAY,GAAGF,KAAK,CAACG,MAANH,CAAmD,CAAA,CAAnDA,CAArB;EAEA,IAAMI,gBAAgB,GAAGJ,KAAK,CAACK,WAANL,CACtBM,UAAAA,QAAD;IAAA,OACEJ,YAAY,CAACK,OAAbL,CAAqBI,QAArBJ,CAAAA,KAAmCM,SAAnCN,GACIM,SADJN,GAEIA,YAAY,CAACK,OAAbL,CAAqBI,QAArBJ,CAAAA,EAJiBF;EAAAA,GAKvB,CAACE,YAAD,CALuBF,CAAzB;EAQA,IAAMS,cAAc,GAAG,KAAK,CAACJ,WAAN,CACrB,UAACK,GAAD,EAAcC,MAAd,EAA+C;IAC7CT,YAAY,CAACK,OAAbL,CAAqBQ,GAArBR,CAAAA,GAA4BS,MAA5BT;IAEA,OAAO,YAAM;MAEXA,YAAY,CAACK,OAAbL,CAAqBQ,GAArBR,CAAAA,GAA4BM,SAA5BN;IACD,CAHD;EAID,CARoB,EASrB,EATqB,CAAvB;EAYA,OAAO;IACLE,gBADK,EACLA,gBADK;IAELK,cAAAA,EAAAA;EAFK,CAAP;AAID","sourcesContent":["import * as React from 'react';\nimport { NavigatorStateGetter } from './NavigationBuilderContext';\n\n/**\n * Hook which lets child navigators add getters to be called for obtaining rehydrated state.\n */\n\nexport default function useStateGetters() {\n  const stateGetters = React.useRef<Record<string, NavigatorStateGetter>>({});\n\n  const getStateForRoute = React.useCallback(\n    (routeKey: string) =>\n      stateGetters.current[routeKey] === undefined\n        ? undefined\n        : stateGetters.current[routeKey](),\n    [stateGetters]\n  );\n\n  const addStateGetter = React.useCallback(\n    (key: string, getter: NavigatorStateGetter) => {\n      stateGetters.current[key] = getter;\n\n      return () => {\n        // @ts-ignore\n        stateGetters.current[key] = undefined;\n      };\n    },\n    []\n  );\n\n  return {\n    getStateForRoute,\n    addStateGetter,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}