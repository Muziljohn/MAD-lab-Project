{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.applicationName = exports.applicationId = exports.androidId = exports.ApplicationReleaseType = void 0;\nexports.getInstallReferrerAsync = getInstallReferrerAsync;\nexports.getInstallationTimeAsync = getInstallationTimeAsync;\nexports.getIosApplicationReleaseTypeAsync = getIosApplicationReleaseTypeAsync;\nexports.getIosIdForVendorAsync = getIosIdForVendorAsync;\nexports.getIosPushNotificationServiceEnvironmentAsync = getIosPushNotificationServiceEnvironmentAsync;\nexports.getLastUpdateTimeAsync = getLastUpdateTimeAsync;\nexports.nativeBuildVersion = exports.nativeApplicationVersion = void 0;\nvar _expoModulesCore = require(\"expo-modules-core\");\nvar _ExpoApplication = _interopRequireDefault(require(\"./ExpoApplication\"));\nfunction _regeneratorRuntime() { \"use strict\"; _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nvar nativeApplicationVersion = _ExpoApplication.default ? _ExpoApplication.default.nativeApplicationVersion || null : null;\nexports.nativeApplicationVersion = nativeApplicationVersion;\nvar nativeBuildVersion = _ExpoApplication.default ? _ExpoApplication.default.nativeBuildVersion || null : null;\nexports.nativeBuildVersion = nativeBuildVersion;\nvar applicationName = _ExpoApplication.default ? _ExpoApplication.default.applicationName || null : null;\nexports.applicationName = applicationName;\nvar applicationId = _ExpoApplication.default ? _ExpoApplication.default.applicationId || null : null;\nexports.applicationId = applicationId;\nvar androidId = _ExpoApplication.default ? _ExpoApplication.default.androidId || null : null;\nexports.androidId = androidId;\nfunction getInstallReferrerAsync() {\n  return _regeneratorRuntime().async(function getInstallReferrerAsync$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        if (_ExpoApplication.default.getInstallReferrerAsync) {\n          _context.next = 2;\n          break;\n        }\n        throw new _expoModulesCore.UnavailabilityError('expo-application', 'getInstallReferrerAsync');\n      case 2:\n        _context.next = 4;\n        return _regeneratorRuntime().awrap(_ExpoApplication.default.getInstallReferrerAsync());\n      case 4:\n        return _context.abrupt(\"return\", _context.sent);\n      case 5:\n      case \"end\":\n        return _context.stop();\n    }\n  }, null, null, null, Promise);\n}\nfunction getIosIdForVendorAsync() {\n  var _await$ExpoApplicatio;\n  return _regeneratorRuntime().async(function getIosIdForVendorAsync$(_context2) {\n    while (1) switch (_context2.prev = _context2.next) {\n      case 0:\n        if (_ExpoApplication.default.getIosIdForVendorAsync) {\n          _context2.next = 2;\n          break;\n        }\n        throw new _expoModulesCore.UnavailabilityError('expo-application', 'getIosIdForVendorAsync');\n      case 2:\n        _context2.next = 4;\n        return _regeneratorRuntime().awrap(_ExpoApplication.default.getIosIdForVendorAsync());\n      case 4:\n        _context2.t0 = _await$ExpoApplicatio = _context2.sent;\n        if (!(_context2.t0 != null)) {\n          _context2.next = 9;\n          break;\n        }\n        _context2.t1 = _await$ExpoApplicatio;\n        _context2.next = 10;\n        break;\n      case 9:\n        _context2.t1 = null;\n      case 10:\n        return _context2.abrupt(\"return\", _context2.t1);\n      case 11:\n      case \"end\":\n        return _context2.stop();\n    }\n  }, null, null, null, Promise);\n}\nvar ApplicationReleaseType;\nexports.ApplicationReleaseType = ApplicationReleaseType;\n(function (ApplicationReleaseType) {\n  ApplicationReleaseType[ApplicationReleaseType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  ApplicationReleaseType[ApplicationReleaseType[\"SIMULATOR\"] = 1] = \"SIMULATOR\";\n  ApplicationReleaseType[ApplicationReleaseType[\"ENTERPRISE\"] = 2] = \"ENTERPRISE\";\n  ApplicationReleaseType[ApplicationReleaseType[\"DEVELOPMENT\"] = 3] = \"DEVELOPMENT\";\n  ApplicationReleaseType[ApplicationReleaseType[\"AD_HOC\"] = 4] = \"AD_HOC\";\n  ApplicationReleaseType[ApplicationReleaseType[\"APP_STORE\"] = 5] = \"APP_STORE\";\n})(ApplicationReleaseType || (exports.ApplicationReleaseType = ApplicationReleaseType = {}));\nfunction getIosApplicationReleaseTypeAsync() {\n  return _regeneratorRuntime().async(function getIosApplicationReleaseTypeAsync$(_context3) {\n    while (1) switch (_context3.prev = _context3.next) {\n      case 0:\n        if (_ExpoApplication.default.getApplicationReleaseTypeAsync) {\n          _context3.next = 2;\n          break;\n        }\n        throw new _expoModulesCore.UnavailabilityError('expo-application', 'getApplicationReleaseTypeAsync');\n      case 2:\n        _context3.next = 4;\n        return _regeneratorRuntime().awrap(_ExpoApplication.default.getApplicationReleaseTypeAsync());\n      case 4:\n        return _context3.abrupt(\"return\", _context3.sent);\n      case 5:\n      case \"end\":\n        return _context3.stop();\n    }\n  }, null, null, null, Promise);\n}\nfunction getIosPushNotificationServiceEnvironmentAsync() {\n  return _regeneratorRuntime().async(function getIosPushNotificationServiceEnvironmentAsync$(_context4) {\n    while (1) switch (_context4.prev = _context4.next) {\n      case 0:\n        if (_ExpoApplication.default.getPushNotificationServiceEnvironmentAsync) {\n          _context4.next = 2;\n          break;\n        }\n        throw new _expoModulesCore.UnavailabilityError('expo-application', 'getPushNotificationServiceEnvironmentAsync');\n      case 2:\n        _context4.next = 4;\n        return _regeneratorRuntime().awrap(_ExpoApplication.default.getPushNotificationServiceEnvironmentAsync());\n      case 4:\n        return _context4.abrupt(\"return\", _context4.sent);\n      case 5:\n      case \"end\":\n        return _context4.stop();\n    }\n  }, null, null, null, Promise);\n}\nfunction getInstallationTimeAsync() {\n  var installationTime;\n  return _regeneratorRuntime().async(function getInstallationTimeAsync$(_context5) {\n    while (1) switch (_context5.prev = _context5.next) {\n      case 0:\n        if (_ExpoApplication.default.getInstallationTimeAsync) {\n          _context5.next = 2;\n          break;\n        }\n        throw new _expoModulesCore.UnavailabilityError('expo-application', 'getInstallationTimeAsync');\n      case 2:\n        _context5.next = 4;\n        return _regeneratorRuntime().awrap(_ExpoApplication.default.getInstallationTimeAsync());\n      case 4:\n        installationTime = _context5.sent;\n        return _context5.abrupt(\"return\", new Date(installationTime));\n      case 6:\n      case \"end\":\n        return _context5.stop();\n    }\n  }, null, null, null, Promise);\n}\nfunction getLastUpdateTimeAsync() {\n  var lastUpdateTime;\n  return _regeneratorRuntime().async(function getLastUpdateTimeAsync$(_context6) {\n    while (1) switch (_context6.prev = _context6.next) {\n      case 0:\n        if (_ExpoApplication.default.getLastUpdateTimeAsync) {\n          _context6.next = 2;\n          break;\n        }\n        throw new _expoModulesCore.UnavailabilityError('expo-application', 'getLastUpdateTimeAsync');\n      case 2:\n        _context6.next = 4;\n        return _regeneratorRuntime().awrap(_ExpoApplication.default.getLastUpdateTimeAsync());\n      case 4:\n        lastUpdateTime = _context6.sent;\n        return _context6.abrupt(\"return\", new Date(lastUpdateTime));\n      case 6:\n      case \"end\":\n        return _context6.stop();\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["../src/Application.ts"],"names":[],"mappings":"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","sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport ExpoApplication from './ExpoApplication';\n\n// @needsAudit\n/**\n * The human-readable version of the native application that may be displayed in the app store.\n * This is the `Info.plist` value for `CFBundleShortVersionString` on iOS and the version name set\n * by `version` in `app.json` on Android at the time the native app was built.\n * On web, this value is `null`.\n * @example `\"2.11.0\"`\n */\nexport const nativeApplicationVersion: string | null = ExpoApplication\n  ? ExpoApplication.nativeApplicationVersion || null\n  : null;\n\n// @needsAudit\n/**\n * The internal build version of the native application that the app store may use to distinguish\n * between different binaries. This is the `Info.plist` value for `CFBundleVersion` on iOS (set with\n * `ios.buildNumber` value in `app.json` in a standalone app) and the version code set by\n * `android.versionCode` in `app.json` on Android at the time the native app was built. On web, this\n * value is `null`. The return type on Android and iOS is `string`.\n * @example iOS: `\"2.11.0\"`, Android: `\"114\"`\n */\nexport const nativeBuildVersion: string | null = ExpoApplication\n  ? ExpoApplication.nativeBuildVersion || null\n  : null;\n\n// @needsAudit\n/**\n * The human-readable name of the application that is displayed with the app's icon on the device's\n * home screen or desktop. On Android and iOS, this value is a `string` unless the name could not be\n * retrieved, in which case this value will be `null`. On web this value is `null`.\n * @example `\"Expo\"`, `\"Yelp\"`, `\"Instagram\"`\n */\nexport const applicationName: string | null = ExpoApplication\n  ? ExpoApplication.applicationName || null\n  : null;\n\n// @needsAudit\n/**\n * The ID of the application. On Android, this is the application ID. On iOS, this is the bundle ID.\n * On web, this is `null`.\n * @example `\"com.cocoacasts.scribbles\"`, `\"com.apple.Pages\"`\n */\nexport const applicationId: string | null = ExpoApplication\n  ? ExpoApplication.applicationId || null\n  : null;\n\n// @needsAudit\n/**\n * The value of [`Settings.Secure.ANDROID_ID`](https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID).\n * This is a hexadecimal `string` unique to each combination of app-signing key, user, and device.\n * The value may change if a factory reset is performed on the device or if an APK signing key changes.\n * For more information about how the platform handles `ANDROID_ID` in Android 8.0 (API level 26)\n * and higher, see [Android 8.0 Behavior Changes](https://developer.android.com/about/versions/oreo/android-8.0-changes.html#privacy-all).\n * On iOS and web, this value is `null`.\n * > In versions of the platform lower than Android 8.0 (API level 26), this value remains constant\n * > for the lifetime of the user's device. See the [ANDROID_ID](https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID)\n * > official docs for more information.\n * @example `\"dd96dec43fb81c97\"`\n * @platform android\n */\nexport const androidId: string | null = ExpoApplication ? ExpoApplication.androidId || null : null;\n\n// @needsAudit\n/**\n * Gets the referrer URL of the installed app with the [`Install Referrer API`](https://developer.android.com/google/play/installreferrer)\n * from the Google Play Store. In practice, the referrer URL may not be a complete, absolute URL.\n * @return A `Promise` that fulfills with a `string` of the referrer URL of the installed app.\n *\n * @example\n * ```ts\n * await Application.getInstallReferrerAsync();\n * // \"utm_source=google-play&utm_medium=organic\"\n * ```\n * @platform android\n */\nexport async function getInstallReferrerAsync(): Promise<string> {\n  if (!ExpoApplication.getInstallReferrerAsync) {\n    throw new UnavailabilityError('expo-application', 'getInstallReferrerAsync');\n  }\n  return await ExpoApplication.getInstallReferrerAsync();\n}\n\n// @needsAudit\n/**\n * Gets the iOS \"identifier for vendor\" ([IDFV](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor))\n * value, a string ID that uniquely identifies a device to the app’s vendor. This method may\n * sometimes return `nil`, in which case wait and call the method again later. This might happen\n * when the device has been restarted before the user has unlocked the device.\n *\n * The OS will change the vendor identifier if all apps from the current app's vendor have been\n * uninstalled.\n *\n * @return A `Promise` that fulfills with a `string` specifying the app's vendor ID. Apps from the\n * same vendor will return the same ID. See Apple's documentation for more information about the\n * vendor ID's semantics.\n *\n * @example\n * ```ts\n * await Application.getIosIdForVendorAsync();\n * // \"68753A44-4D6F-1226-9C60-0050E4C00067\"\n * ```\n * @platform ios\n */\nexport async function getIosIdForVendorAsync(): Promise<string | null> {\n  if (!ExpoApplication.getIosIdForVendorAsync) {\n    throw new UnavailabilityError('expo-application', 'getIosIdForVendorAsync');\n  }\n  return (await ExpoApplication.getIosIdForVendorAsync()) ?? null;\n}\n\n// @docsMissing\nexport enum ApplicationReleaseType {\n  UNKNOWN = 0,\n  SIMULATOR = 1,\n  ENTERPRISE = 2,\n  DEVELOPMENT = 3,\n  AD_HOC = 4,\n  APP_STORE = 5,\n}\n\n// @needsAudit\n/**\n * Gets the iOS application release type.\n * @return Returns a promise which fulfills with an [`ApplicationReleaseType`](#applicationreleasetype).\n * @platform ios\n */\nexport async function getIosApplicationReleaseTypeAsync(): Promise<ApplicationReleaseType> {\n  if (!ExpoApplication.getApplicationReleaseTypeAsync) {\n    throw new UnavailabilityError('expo-application', 'getApplicationReleaseTypeAsync');\n  }\n  return await ExpoApplication.getApplicationReleaseTypeAsync();\n}\n\n// @needsAudit\n/**\n * Gets the current [Apple Push Notification (APN)](https://developer.apple.com/documentation/bundleresources/entitlements/aps-environment?language=objc)\n * service environment.\n * @return Returns a promise fulfilled with the string, either `'development'` or `'production'`,\n * based on the current APN environment.\n * @platform ios\n */\nexport async function getIosPushNotificationServiceEnvironmentAsync(): Promise<string> {\n  if (!ExpoApplication.getPushNotificationServiceEnvironmentAsync) {\n    throw new UnavailabilityError('expo-application', 'getPushNotificationServiceEnvironmentAsync');\n  }\n  return await ExpoApplication.getPushNotificationServiceEnvironmentAsync();\n}\n\n// @needsAudit\n/**\n * Gets the time the app was installed onto the device, not counting subsequent updates. If the app\n * is uninstalled and reinstalled, this method returns the time the app was reinstalled.\n * - On iOS, this method uses the [`NSFileCreationDate`](https://developer.apple.com/documentation/foundation/nsfilecreationdate?language=objc)\n * of the app's document root directory.\n * - On Android, this method uses [`PackageInfo.firstInstallTime`](https://developer.android.com/reference/android/content/pm/PackageInfo.html#firstInstallTime).\n * - On web, this method returns `null`.\n *\n * @return Returns a `Promise` that fulfills with a `Date` object that specifies the time the app\n * was installed on the device.\n *\n * @example\n * ```ts\n * await Application.getInstallationTimeAsync();\n * // 2019-07-18T18:08:26.121Z\n * ```\n */\nexport async function getInstallationTimeAsync(): Promise<Date> {\n  if (!ExpoApplication.getInstallationTimeAsync) {\n    throw new UnavailabilityError('expo-application', 'getInstallationTimeAsync');\n  }\n  const installationTime = await ExpoApplication.getInstallationTimeAsync();\n  return new Date(installationTime);\n}\n\n// @needsAudit\n/**\n * Gets the last time the app was updated from the Google Play Store.\n * @return Returns a `Promise` that fulfills with a `Date` object that specifies the last time\n * the app was updated via the Google Play Store).\n *\n * @example\n * ```ts\n * await Application.getLastUpdateTimeAsync();\n * // 2019-07-18T21:20:16.887Z\n * ```\n * @platform android\n */\nexport async function getLastUpdateTimeAsync(): Promise<Date> {\n  if (!ExpoApplication.getLastUpdateTimeAsync) {\n    throw new UnavailabilityError('expo-application', 'getLastUpdateTimeAsync');\n  }\n  const lastUpdateTime = await ExpoApplication.getLastUpdateTimeAsync();\n  return new Date(lastUpdateTime);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}