{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { NavigationContext, NavigationRouteContext, CommonActions, useTheme, useLinkBuilder } from '@react-navigation/native';\nimport { useSafeArea } from 'react-native-safe-area-context';\nimport BottomTabItem from \"./BottomTabItem\";\nvar DEFAULT_TABBAR_HEIGHT = 50;\nvar DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nvar useNativeDriver = Platform.OS !== 'web';\nexport default function BottomTabBar(_ref) {\n  var state = _ref.state,\n    navigation = _ref.navigation,\n    descriptors = _ref.descriptors,\n    activeBackgroundColor = _ref.activeBackgroundColor,\n    activeTintColor = _ref.activeTintColor,\n    _ref$adaptive = _ref.adaptive,\n    adaptive = _ref$adaptive === void 0 ? true : _ref$adaptive,\n    allowFontScaling = _ref.allowFontScaling,\n    inactiveBackgroundColor = _ref.inactiveBackgroundColor,\n    inactiveTintColor = _ref.inactiveTintColor,\n    _ref$keyboardHidesTab = _ref.keyboardHidesTabBar,\n    keyboardHidesTabBar = _ref$keyboardHidesTab === void 0 ? false : _ref$keyboardHidesTab,\n    labelPosition = _ref.labelPosition,\n    labelStyle = _ref.labelStyle,\n    safeAreaInsets = _ref.safeAreaInsets,\n    showIcon = _ref.showIcon,\n    showLabel = _ref.showLabel,\n    style = _ref.style,\n    tabStyle = _ref.tabStyle;\n  var _safeAreaInsets$top, _safeAreaInsets$right, _safeAreaInsets$botto, _safeAreaInsets$left;\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var buildLink = useLinkBuilder();\n  var _React$useState = React.useState(function () {\n      var _Dimensions$get = Dimensions.get('window'),\n        _Dimensions$get$heigh = _Dimensions$get.height,\n        height = _Dimensions$get$heigh === void 0 ? 0 : _Dimensions$get$heigh,\n        _Dimensions$get$width = _Dimensions$get.width,\n        width = _Dimensions$get$width === void 0 ? 0 : _Dimensions$get$width;\n      return {\n        height: height,\n        width: width\n      };\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    dimensions = _React$useState2[0],\n    setDimensions = _React$useState2[1];\n  var _React$useState3 = React.useState({\n      height: 0,\n      width: dimensions.width\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    layout = _React$useState4[0],\n    setLayout = _React$useState4[1];\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    keyboardShown = _React$useState6[0],\n    setKeyboardShown = _React$useState6[1];\n  var _React$useState7 = React.useState(function () {\n      return new Animated.Value(1);\n    }),\n    _React$useState8 = _slicedToArray(_React$useState7, 1),\n    visible = _React$useState8[0];\n  var routes = state.routes;\n  React.useEffect(function () {\n    if (keyboardShown) {\n      Animated.timing(visible, {\n        toValue: 0,\n        duration: 200,\n        useNativeDriver: useNativeDriver\n      }).start();\n    }\n  }, [keyboardShown, visible]);\n  React.useEffect(function () {\n    var handleOrientationChange = function handleOrientationChange(_ref2) {\n      var window = _ref2.window;\n      setDimensions(window);\n    };\n    var handleKeyboardShow = function handleKeyboardShow() {\n      return setKeyboardShown(true);\n    };\n    var handleKeyboardHide = function handleKeyboardHide() {\n      return Animated.timing(visible, {\n        toValue: 1,\n        duration: 250,\n        useNativeDriver: useNativeDriver\n      }).start(function (_ref3) {\n        var finished = _ref3.finished;\n        if (finished) {\n          setKeyboardShown(false);\n        }\n      });\n    };\n    Dimensions.addEventListener('change', handleOrientationChange);\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n    }\n    return function () {\n      Dimensions.removeEventListener('change', handleOrientationChange);\n      if (Platform.OS === 'ios') {\n        Keyboard.removeListener('keyboardWillShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardWillHide', handleKeyboardHide);\n      } else {\n        Keyboard.removeListener('keyboardDidShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardDidHide', handleKeyboardHide);\n      }\n    };\n  }, [visible]);\n  var handleLayout = function handleLayout(e) {\n    var _e$nativeEvent$layout = e.nativeEvent.layout,\n      height = _e$nativeEvent$layout.height,\n      width = _e$nativeEvent$layout.width;\n    setLayout(function (layout) {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height: height,\n          width: width\n        };\n      }\n    });\n  };\n  var shouldUseHorizontalLabels = function shouldUseHorizontalLabels() {\n    if (labelPosition) {\n      return labelPosition === 'beside-icon';\n    }\n    if (!adaptive) {\n      return false;\n    }\n    if (layout.width >= 768) {\n      var maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n      var flattenedStyle = StyleSheet.flatten(tabStyle);\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          maxTabItemWidth = flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          maxTabItemWidth = flattenedStyle.maxWidth;\n        }\n      }\n      return routes.length * maxTabItemWidth <= layout.width;\n    } else {\n      var isLandscape = dimensions.width > dimensions.height;\n      return isLandscape;\n    }\n  };\n  var defaultInsets = useSafeArea();\n  var insets = {\n    top: (_safeAreaInsets$top = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.top) !== null && _safeAreaInsets$top !== void 0 ? _safeAreaInsets$top : defaultInsets.top,\n    right: (_safeAreaInsets$right = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.right) !== null && _safeAreaInsets$right !== void 0 ? _safeAreaInsets$right : defaultInsets.right,\n    bottom: (_safeAreaInsets$botto = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.bottom) !== null && _safeAreaInsets$botto !== void 0 ? _safeAreaInsets$botto : defaultInsets.bottom,\n    left: (_safeAreaInsets$left = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.left) !== null && _safeAreaInsets$left !== void 0 ? _safeAreaInsets$left : defaultInsets.left\n  };\n  return React.createElement(Animated.View, {\n    style: [styles.tabBar, {\n      backgroundColor: colors.card,\n      borderTopColor: colors.border\n    }, keyboardHidesTabBar ? {\n      transform: [{\n        translateY: visible.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height, 0]\n        })\n      }],\n      position: keyboardShown ? 'absolute' : null\n    } : null, {\n      height: DEFAULT_TABBAR_HEIGHT + insets.bottom,\n      paddingBottom: insets.bottom,\n      paddingHorizontal: Math.max(insets.left, insets.right)\n    }, style],\n    pointerEvents: keyboardHidesTabBar && keyboardShown ? 'none' : 'auto'\n  }, React.createElement(View, {\n    style: styles.content,\n    onLayout: handleLayout\n  }, routes.map(function (route, index) {\n    var focused = index === state.index;\n    var options = descriptors[route.key].options;\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n      if (!focused && !event.defaultPrevented) {\n        navigation.dispatch(_objectSpread(_objectSpread({}, CommonActions.navigate(route.name)), {}, {\n          target: state.key\n        }));\n      }\n    };\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var accessibilityLabel = options.tabBarAccessibilityLabel !== undefined ? options.tabBarAccessibilityLabel : typeof label === 'string' ? \"\".concat(label, \", tab, \").concat(index + 1, \" of \").concat(routes.length) : undefined;\n    return React.createElement(NavigationContext.Provider, {\n      key: route.key,\n      value: descriptors[route.key].navigation\n    }, React.createElement(NavigationRouteContext.Provider, {\n      value: route\n    }, React.createElement(BottomTabItem, {\n      route: route,\n      focused: focused,\n      horizontal: shouldUseHorizontalLabels(),\n      onPress: onPress,\n      onLongPress: onLongPress,\n      accessibilityLabel: accessibilityLabel,\n      to: buildLink(route.name, route.params),\n      testID: options.tabBarTestID,\n      allowFontScaling: allowFontScaling,\n      activeTintColor: activeTintColor,\n      inactiveTintColor: inactiveTintColor,\n      activeBackgroundColor: activeBackgroundColor,\n      inactiveBackgroundColor: inactiveBackgroundColor,\n      button: options.tabBarButton,\n      icon: options.tabBarIcon,\n      label: label,\n      showIcon: showIcon,\n      showLabel: showLabel,\n      labelStyle: labelStyle,\n      style: tabStyle\n    })));\n  })));\n}\nvar styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["BottomTabBar.tsx"],"names":["React","NavigationContext","NavigationRouteContext","CommonActions","useTheme","useLinkBuilder","useSafeArea","BottomTabItem","DEFAULT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","Platform","OS","BottomTabBar","state","navigation","descriptors","activeBackgroundColor","activeTintColor","adaptive","allowFontScaling","inactiveBackgroundColor","inactiveTintColor","keyboardHidesTabBar","labelPosition","labelStyle","safeAreaInsets","showIcon","showLabel","style","tabStyle","colors","buildLink","dimensions","setDimensions","useState","height","width","Dimensions","get","layout","setLayout","keyboardShown","setKeyboardShown","visible","Animated","Value","routes","useEffect","timing","toValue","duration","start","handleOrientationChange","window","handleKeyboardShow","handleKeyboardHide","finished","addEventListener","Keyboard","addListener","removeEventListener","removeListener","handleLayout","e","nativeEvent","shouldUseHorizontalLabels","maxTabItemWidth","flattenedStyle","StyleSheet","flatten","maxWidth","length","isLandscape","defaultInsets","insets","top","right","bottom","left","styles","tabBar","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","position","paddingBottom","paddingHorizontal","Math","max","content","map","route","index","focused","options","key","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","navigate","name","onLongPress","label","tabBarLabel","undefined","title","accessibilityLabel","tabBarAccessibilityLabel","params","tabBarTestID","tabBarButton","tabBarIcon","create","borderTopWidth","hairlineWidth","elevation","flex","flexDirection"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  Keyboard,\n  Platform,\n  LayoutChangeEvent,\n  ScaledSize,\n  Dimensions,\n} from 'react-native';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  CommonActions,\n  useTheme,\n  useLinkBuilder,\n} from '@react-navigation/native';\nimport { useSafeArea } from 'react-native-safe-area-context';\n\nimport BottomTabItem from './BottomTabItem';\nimport { BottomTabBarProps } from '../types';\n\ntype Props = BottomTabBarProps & {\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 50;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  activeBackgroundColor,\n  activeTintColor,\n  adaptive = true,\n  allowFontScaling,\n  inactiveBackgroundColor,\n  inactiveTintColor,\n  keyboardHidesTabBar = false,\n  labelPosition,\n  labelStyle,\n  safeAreaInsets,\n  showIcon,\n  showLabel,\n  style,\n  tabStyle,\n}: Props) {\n  const { colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const [dimensions, setDimensions] = React.useState(() => {\n    const { height = 0, width = 0 } = Dimensions.get('window');\n\n    return { height, width };\n  });\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n  const [keyboardShown, setKeyboardShown] = React.useState(false);\n\n  const [visible] = React.useState(() => new Animated.Value(1));\n\n  const { routes } = state;\n\n  React.useEffect(() => {\n    if (keyboardShown) {\n      Animated.timing(visible, {\n        toValue: 0,\n        duration: 200,\n        useNativeDriver,\n      }).start();\n    }\n  }, [keyboardShown, visible]);\n\n  React.useEffect(() => {\n    const handleOrientationChange = ({ window }: { window: ScaledSize }) => {\n      setDimensions(window);\n    };\n\n    const handleKeyboardShow = () => setKeyboardShown(true);\n\n    const handleKeyboardHide = () =>\n      Animated.timing(visible, {\n        toValue: 1,\n        duration: 250,\n        useNativeDriver,\n      }).start(({ finished }) => {\n        if (finished) {\n          setKeyboardShown(false);\n        }\n      });\n\n    Dimensions.addEventListener('change', handleOrientationChange);\n\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', handleKeyboardHide);\n    }\n\n    return () => {\n      Dimensions.removeEventListener('change', handleOrientationChange);\n\n      if (Platform.OS === 'ios') {\n        Keyboard.removeListener('keyboardWillShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardWillHide', handleKeyboardHide);\n      } else {\n        Keyboard.removeListener('keyboardDidShow', handleKeyboardShow);\n        Keyboard.removeListener('keyboardDidHide', handleKeyboardHide);\n      }\n    };\n  }, [visible]);\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const shouldUseHorizontalLabels = () => {\n    if (labelPosition) {\n      return labelPosition === 'beside-icon';\n    }\n\n    if (!adaptive) {\n      return false;\n    }\n\n    if (layout.width >= 768) {\n      // Screen size matches a tablet\n      let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n      const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          maxTabItemWidth = flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          maxTabItemWidth = flattenedStyle.maxWidth;\n        }\n      }\n\n      return routes.length * maxTabItemWidth <= layout.width;\n    } else {\n      const isLandscape = dimensions.width > dimensions.height;\n\n      return isLandscape;\n    }\n  };\n\n  const defaultInsets = useSafeArea();\n\n  const insets = {\n    top: safeAreaInsets?.top ?? defaultInsets.top,\n    right: safeAreaInsets?.right ?? defaultInsets.right,\n    bottom: safeAreaInsets?.bottom ?? defaultInsets.bottom,\n    left: safeAreaInsets?.left ?? defaultInsets.left,\n  };\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor: colors.card,\n          borderTopColor: colors.border,\n        },\n        keyboardHidesTabBar\n          ? {\n              // When the keyboard is shown, slide down the tab bar\n              transform: [\n                {\n                  translateY: visible.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [layout.height, 0],\n                  }),\n                },\n              ],\n              // Absolutely position the tab bar so that the content is below it\n              // This is needed to avoid gap at bottom when the tab bar is hidden\n              position: keyboardShown ? 'absolute' : null,\n            }\n          : null,\n        {\n          height: DEFAULT_TABBAR_HEIGHT + insets.bottom,\n          paddingBottom: insets.bottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        style,\n      ]}\n      pointerEvents={keyboardHidesTabBar && keyboardShown ? 'none' : 'auto'}\n    >\n      <View style={styles.content} onLayout={handleLayout}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate(route.name),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  focused={focused}\n                  horizontal={shouldUseHorizontalLabels()}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  to={buildLink(route.name, route.params)}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={allowFontScaling}\n                  activeTintColor={activeTintColor}\n                  inactiveTintColor={inactiveTintColor}\n                  activeBackgroundColor={activeBackgroundColor}\n                  inactiveBackgroundColor={inactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={options.tabBarIcon}\n                  label={label}\n                  showIcon={showIcon}\n                  showLabel={showLabel}\n                  labelStyle={labelStyle}\n                  style={tabStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}