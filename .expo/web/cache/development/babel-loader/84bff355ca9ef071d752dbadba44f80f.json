{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = BottomTabBarItem;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _native = require(\"@react-navigation/native\");\nvar _color = _interopRequireDefault(require(\"color\"));\nvar _TabBarIcon = _interopRequireDefault(require(\"./TabBarIcon\"));\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction BottomTabBarItem(_ref2) {\n  var focused = _ref2.focused,\n    route = _ref2.route,\n    label = _ref2.label,\n    icon = _ref2.icon,\n    to = _ref2.to,\n    _ref2$button = _ref2.button,\n    button = _ref2$button === void 0 ? function (_ref) {\n      var children = _ref.children,\n        style = _ref.style,\n        _onPress = _ref.onPress,\n        to = _ref.to,\n        accessibilityRole = _ref.accessibilityRole,\n        rest = _objectWithoutProperties(_ref, [\"children\", \"style\", \"onPress\", \"to\", \"accessibilityRole\"]);\n      if (_reactNative.Platform.OS === 'web' && to) {\n        return _react.default.createElement(_native.Link, _extends({}, rest, {\n          to: to,\n          style: [styles.button, style],\n          onPress: function onPress(e) {\n            if (!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && (e.button == null || e.button === 0)) {\n              e.preventDefault();\n              _onPress === null || _onPress === void 0 ? void 0 : _onPress(e);\n            }\n          }\n        }), children);\n      } else {\n        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, _extends({}, rest, {\n          accessibilityRole: accessibilityRole,\n          onPress: _onPress\n        }), _react.default.createElement(_reactNative.View, {\n          style: style\n        }, children));\n      }\n    } : _ref2$button,\n    accessibilityLabel = _ref2.accessibilityLabel,\n    testID = _ref2.testID,\n    onPress = _ref2.onPress,\n    onLongPress = _ref2.onLongPress,\n    horizontal = _ref2.horizontal,\n    customActiveTintColor = _ref2.activeTintColor,\n    customInactiveTintColor = _ref2.inactiveTintColor,\n    _ref2$activeBackgroun = _ref2.activeBackgroundColor,\n    activeBackgroundColor = _ref2$activeBackgroun === void 0 ? 'transparent' : _ref2$activeBackgroun,\n    _ref2$inactiveBackgro = _ref2.inactiveBackgroundColor,\n    inactiveBackgroundColor = _ref2$inactiveBackgro === void 0 ? 'transparent' : _ref2$inactiveBackgro,\n    _ref2$showLabel = _ref2.showLabel,\n    showLabel = _ref2$showLabel === void 0 ? true : _ref2$showLabel,\n    _ref2$showIcon = _ref2.showIcon,\n    showIcon = _ref2$showIcon === void 0 ? true : _ref2$showIcon,\n    allowFontScaling = _ref2.allowFontScaling,\n    labelStyle = _ref2.labelStyle,\n    style = _ref2.style;\n  var _useTheme = (0, _native.useTheme)(),\n    colors = _useTheme.colors;\n  var activeTintColor = customActiveTintColor === undefined ? colors.primary : customActiveTintColor;\n  var inactiveTintColor = customInactiveTintColor === undefined ? (0, _color.default)(colors.text).mix((0, _color.default)(colors.card), 0.5).hex() : customInactiveTintColor;\n  var renderLabel = function renderLabel(_ref3) {\n    var focused = _ref3.focused;\n    if (showLabel === false) {\n      return null;\n    }\n    var color = focused ? activeTintColor : inactiveTintColor;\n    if (typeof label === 'string') {\n      return _react.default.createElement(_reactNative.Animated.Text, {\n        numberOfLines: 1,\n        style: [styles.label, {\n          color: color\n        }, showIcon && horizontal ? styles.labelBeside : styles.labelBeneath, labelStyle],\n        allowFontScaling: allowFontScaling\n      }, label);\n    }\n    if (typeof label === 'string') {\n      return label;\n    }\n    return label({\n      focused: focused,\n      color: color\n    });\n  };\n  var renderIcon = function renderIcon(_ref4) {\n    var focused = _ref4.focused;\n    if (showIcon === false || icon === undefined) {\n      return null;\n    }\n    var activeOpacity = focused ? 1 : 0;\n    var inactiveOpacity = focused ? 0 : 1;\n    return _react.default.createElement(_TabBarIcon.default, {\n      route: route,\n      size: horizontal ? 17 : 24,\n      activeOpacity: activeOpacity,\n      inactiveOpacity: inactiveOpacity,\n      activeTintColor: activeTintColor,\n      inactiveTintColor: inactiveTintColor,\n      renderIcon: icon,\n      style: horizontal ? styles.iconHorizontal : styles.iconVertical\n    });\n  };\n  var scene = {\n    route: route,\n    focused: focused\n  };\n  var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n  return button({\n    to: to,\n    onPress: onPress,\n    onLongPress: onLongPress,\n    testID: testID,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: 'button',\n    accessibilityStates: focused ? ['selected'] : [],\n    style: [styles.tab, {\n      backgroundColor: backgroundColor\n    }, horizontal ? styles.tabLandscape : styles.tabPortrait, style],\n    children: _react.default.createElement(_react.default.Fragment, null, renderIcon(scene), renderLabel(scene))\n  });\n}\nvar styles = _reactNative.StyleSheet.create({\n  tab: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column'\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  iconVertical: {\n    flex: 1\n  },\n  iconHorizontal: {\n    height: '100%'\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  },\n  labelBeneath: {\n    fontSize: 11,\n    marginBottom: 1.5\n  },\n  labelBeside: {\n    fontSize: 12,\n    marginLeft: 20\n  },\n  button: {\n    display: 'flex'\n  }\n});","map":{"version":3,"sources":["BottomTabItem.tsx"],"names":["BottomTabBarItem","focused","route","label","icon","to","button","children","style","onPress","accessibilityRole","rest","Platform","OS","styles","e","metaKey","altKey","ctrlKey","shiftKey","preventDefault","accessibilityLabel","testID","onLongPress","horizontal","activeTintColor","customActiveTintColor","inactiveTintColor","customInactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","showLabel","showIcon","allowFontScaling","labelStyle","colors","useTheme","undefined","primary","Color","text","mix","card","hex","renderLabel","color","labelBeside","labelBeneath","renderIcon","activeOpacity","inactiveOpacity","iconHorizontal","iconVertical","scene","backgroundColor","accessibilityStates","tab","tabLandscape","tabPortrait","create","flex","alignItems","justifyContent","flexDirection","height","textAlign","fontSize","marginBottom","marginLeft","display"],"mappings":";;;;;AAAA;AACA;AAWA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+Fe,SAASA,gBAAT,QA6DL;EAAA,IA5DRC,OADuC,SACvCA,OADuC;IAEvCC,KAFuC,SAEvCA,KAFuC;IAGvCC,KAHuC,SAGvCA,KAHuC;IAIvCC,IAJuC,SAIvCA,IAJuC;IAKvCC,EALuC,SAKvCA,EALuC;IAAA,qBAMvCC,MAAM;IAANA,MAAM,6BAAG,UAAA,IAAA,EAOsB;MAPrB,IACRC,QADQ,GAOqB,IAAA,CAN7BA,QADQ;QAERC,KAFQ,GAOqB,IAAA,CAL7BA,KAFQ;QAGRC,QAHQ,GAOqB,IAAA,CAJ7BA,OAAO;QACPJ,EAJQ,GAOqB,IAAA,CAH7BA,EAJQ;QAKRK,iBAAAA,GAE6B,IAAA,CAF7BA,iBAAAA;QACGC,IAC0B,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,UAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,mBAAA,CAAA,CAAA;MAC7B,IAAIC,qBAAQ,CAACC,EAATD,KAAgB,KAAhBA,IAAyBP,EAA7B,EAAiC;QAG/B,OACE,cAAA,CAAA,aAAA,CAAC,YAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EACMM,IADN,EAAA;UAEE,EAAE,EAAEN,EAFN;UAGE,KAAK,EAAE,CAACS,MAAM,CAACR,MAAR,EAAgBE,KAAhB,CAHT;UAIE,OAAO,EAAGO,iBAAAA,CAAD,EAAY;YACnB,IACE,EAAEA,CAAC,CAACC,OAAFD,IAAaA,CAAC,CAACE,MAAfF,IAAyBA,CAAC,CAACG,OAA3BH,IAAsCA,CAAC,CAACI,QAA1C,CAAA,KACCJ,CAAC,CAACT,MAAFS,IAAY,IAAZA,IAAoBA,CAAC,CAACT,MAAFS,KAAa,CADlC,CADF,EAGE;cACAA,CAAC,CAACK,cAAFL,EAAAA;cACAN,QAAO,KAAA,IAAPA,IAAAA,QAAO,KAAA,KAAA,CAAPA,GAAAA,KAAAA,CAAAA,GAAAA,QAAO,CAAGM,CAAH,CAAPN;YACD;UACF;QAZH,CAAA,CAAA,EAcGF,QAdH,CADF;MAkBD,CArBD,MAqBO;QACL,OACE,cAAA,CAAA,aAAA,CAAC,qCAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EACMI,IADN,EAAA;UAEE,iBAAiB,EAAED,iBAFrB;UAGE,OAAO,EAAED;QAHX,CAAA,CAAA,EAKE,cAAA,CAAA,aAAA,CAAC,iBAAD,EAAA;UAAM,KAAK,EAAED;QAAb,CAAA,EAAqBD,QAArB,CALF,CADF;MASD;IACF,CA9CsC;IA+CvCc,kBA/CuC,SA+CvCA,kBA/CuC;IAgDvCC,MAhDuC,SAgDvCA,MAhDuC;IAiDvCb,OAjDuC,SAiDvCA,OAjDuC;IAkDvCc,WAlDuC,SAkDvCA,WAlDuC;IAmDvCC,UAnDuC,SAmDvCA,UAnDuC;IAoDtBE,qBApDsB,SAoDvCD,eAAe;IACIG,uBArDoB,SAqDvCD,iBAAiB;IAAA,8BACjBE,qBAAqB;IAArBA,qBAAqB,sCAAG,aAtDe;IAAA,8BAuDvCC,uBAAuB;IAAvBA,uBAAuB,sCAAG,aAvDa;IAAA,wBAwDvCC,SAAS;IAATA,SAAS,gCAAG,IAxD2B;IAAA,uBAyDvCC,QAAQ;IAARA,QAAQ,+BAAG,IAzD4B;IA0DvCC,gBA1DuC,SA0DvCA,gBA1DuC;IA2DvCC,UA3DuC,SA2DvCA,UA3DuC;IA4DvC1B,KAAAA,SAAAA,KAAAA;EAEA,gBAAmB4B,IAAAA,gBAAQ,GAA3B;IAAQD,MAAAA,aAAAA,MAAAA;EAER,IAAMV,eAAe,GACnBC,qBAAqB,KAAKW,SAA1BX,GACIS,MAAM,CAACG,OADXZ,GAEIA,qBAHN;EAKA,IAAMC,iBAAiB,GACrBC,uBAAuB,KAAKS,SAA5BT,GACIW,IAAAA,cAAK,EAACJ,MAAM,CAACK,IAAR,CAALD,CAAmBE,GAAnBF,CAAuBA,IAAAA,cAAK,EAACJ,MAAM,CAACO,IAAR,CAA5BH,EAA2C,GAA3CA,CAAAA,CAAgDI,GAAhDJ,EADJX,GAEIA,uBAHN;EAKA,IAAMgB,WAAW,GAAG,SAAdA,WAAW,QAA0C;IAAA,IAApC3C,OAAAA,SAAAA,OAAAA;IACrB,IAAI8B,SAAS,KAAK,KAAlB,EAAyB;MACvB,OAAO,IAAP;IACD;IAED,IAAMc,KAAK,GAAG5C,OAAO,GAAGwB,eAAH,GAAqBE,iBAA1C;IAEA,IAAI,OAAOxB,KAAP,KAAiB,QAArB,EAA+B;MAC7B,OACE,cAAA,CAAA,aAAA,CAAC,qBAAD,CAAU,IAAV,EAAA;QACE,aAAa,EAAE,CADjB;QAEE,KAAK,EAAE,CACLW,MAAM,CAACX,KADF,EAEL;UAAE0C,KAAAA,EAAAA;QAAF,CAFK,EAGLb,QAAQ,IAAIR,UAAZQ,GAAyBlB,MAAM,CAACgC,WAAhCd,GAA8ClB,MAAM,CAACiC,YAHhD,EAILb,UAJK,CAFT;QAQE,gBAAgB,EAAED;MARpB,CAAA,EAUG9B,KAVH,CADF;IAcD;IAED,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;MAC7B,OAAOA,KAAP;IACD;IAED,OAAOA,KAAK,CAAC;MAAEF,OAAF,EAAEA,OAAF;MAAW4C,KAAAA,EAAAA;IAAX,CAAD,CAAZ;EACD,CA7BD;EA+BA,IAAMG,UAAU,GAAG,SAAbA,UAAU,QAA0C;IAAA,IAApC/C,OAAAA,SAAAA,OAAAA;IACpB,IAAI+B,QAAQ,KAAK,KAAbA,IAAsB5B,IAAI,KAAKiC,SAAnC,EAA8C;MAC5C,OAAO,IAAP;IACD;IAED,IAAMY,aAAa,GAAGhD,OAAO,GAAG,CAAH,GAAO,CAApC;IACA,IAAMiD,eAAe,GAAGjD,OAAO,GAAG,CAAH,GAAO,CAAtC;IAEA,OACE,cAAA,CAAA,aAAA,CAAC,mBAAD,EAAA;MACE,KAAK,EAAEC,KADT;MAEE,IAAI,EAAEsB,UAAU,GAAG,EAAH,GAAQ,EAF1B;MAGE,aAAa,EAAEyB,aAHjB;MAIE,eAAe,EAAEC,eAJnB;MAKE,eAAe,EAAEzB,eALnB;MAME,iBAAiB,EAAEE,iBANrB;MAOE,UAAU,EAAEvB,IAPd;MAQE,KAAK,EAAEoB,UAAU,GAAGV,MAAM,CAACqC,cAAV,GAA2BrC,MAAM,CAACsC;IARrD,CAAA,CADF;EAYD,CApBD;EAsBA,IAAMC,KAAK,GAAG;IAAEnD,KAAF,EAAEA,KAAF;IAASD,OAAAA,EAAAA;EAAT,CAAd;EAEA,IAAMqD,eAAe,GAAGrD,OAAO,GAC3B4B,qBAD2B,GAE3BC,uBAFJ;EAIA,OAAOxB,MAAM,CAAC;IACZD,EADY,EACZA,EADY;IAEZI,OAFY,EAEZA,OAFY;IAGZc,WAHY,EAGZA,WAHY;IAIZD,MAJY,EAIZA,MAJY;IAKZD,kBALY,EAKZA,kBALY;IAMZX,iBAAiB,EAAE,QANP;IAOZ6C,mBAAmB,EAAEtD,OAAO,GAAG,CAAC,UAAD,CAAH,GAAkB,EAPlC;IAQZO,KAAK,EAAE,CACLM,MAAM,CAAC0C,GADF,EAEL;MAAEF,eAAAA,EAAAA;IAAF,CAFK,EAGL9B,UAAU,GAAGV,MAAM,CAAC2C,YAAV,GAAyB3C,MAAM,CAAC4C,WAHrC,EAILlD,KAJK,CARK;IAcZD,QAAQ,EACN,cAAA,CAAA,aAAA,CAAC,cAAD,CAAO,QAAP,EAAA,IAAA,EACGyC,UAAU,CAACK,KAAD,CADb,EAEGT,WAAW,CAACS,KAAD,CAFd;EAfU,CAAD,CAAb;AAqBD;AAED,IAAMvC,MAAM,GAAG,uBAAU,CAAC6C,MAAX,CAAkB;EAC/BH,GAAG,EAAE;IACHI,IAAI,EAAE,CADH;IAEHC,UAAU,EAAE;EAFT,CAD0B;EAK/BH,WAAW,EAAE;IACXI,cAAc,EAAE,UADL;IAEXC,aAAa,EAAE;EAFJ,CALkB;EAS/BN,YAAY,EAAE;IACZK,cAAc,EAAE,QADJ;IAEZC,aAAa,EAAE;EAFH,CATiB;EAa/BX,YAAY,EAAE;IACZQ,IAAI,EAAE;EADM,CAbiB;EAgB/BT,cAAc,EAAE;IACda,MAAM,EAAE;EADM,CAhBe;EAmB/B7D,KAAK,EAAE;IACL8D,SAAS,EAAE,QADN;IAELX,eAAe,EAAE;EAFZ,CAnBwB;EAuB/BP,YAAY,EAAE;IACZmB,QAAQ,EAAE,EADE;IAEZC,YAAY,EAAE;EAFF,CAvBiB;EA2B/BrB,WAAW,EAAE;IACXoB,QAAQ,EAAE,EADC;IAEXE,UAAU,EAAE;EAFD,CA3BkB;EA+B/B9D,MAAM,EAAE;IACN+D,OAAO,EAAE;EADH;AA/BuB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport {\n  View,\n  TouchableWithoutFeedback,\n  Animated,\n  StyleSheet,\n  Platform,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n  GestureResponderEvent,\n} from 'react-native';\nimport { Link, Route, useTheme } from '@react-navigation/native';\nimport Color from 'color';\n\nimport TabBarIcon from './TabBarIcon';\nimport { BottomTabBarButtonProps } from '../types';\n\ntype Props = {\n  /**\n   * Whether the tab is focused.\n   */\n  focused: boolean;\n  /**\n   * The route object which should be specified by the tab.\n   */\n  route: Route<string>;\n  /**\n   * The label text of the tab.\n   */\n  label:\n    | string\n    | ((props: { focused: boolean; color: string }) => React.ReactNode);\n  /**\n   * Icon to display for the tab.\n   */\n  icon?: (props: {\n    focused: boolean;\n    size: number;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * URL to use for the link to the tab.\n   */\n  to?: string;\n  /**\n   * The button for the tab. Uses a `TouchableWithoutFeedback` by default.\n   */\n  button?: (props: BottomTabBarButtonProps) => React.ReactNode;\n  /**\n   * The accessibility label for the tab.\n   */\n  accessibilityLabel?: string;\n  /**\n   * An unique ID for testing for the tab.\n   */\n  testID?: string;\n  /**\n   * Function to execute on press in React Native.\n   * On the web, this will use onClick.\n   */\n  onPress: (\n    e: React.MouseEvent<HTMLElement, MouseEvent> | GestureResponderEvent\n  ) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress: (e: GestureResponderEvent) => void;\n  /**\n   * Whether the label should be aligned with the icon horizontally.\n   */\n  horizontal: boolean;\n  /**\n   * Color for the icon and label when the item is active.\n   */\n  activeTintColor?: string;\n  /**\n   * Color for the icon and label when the item is inactive.\n   */\n  inactiveTintColor?: string;\n  /**\n   * Background color for item when its active.\n   */\n  activeBackgroundColor?: string;\n  /**\n   * Background color for item when its inactive.\n   */\n  inactiveBackgroundColor?: string;\n  /**\n   * Whether to show the label text for the tab.\n   */\n  showLabel?: boolean;\n  /**\n   * Whether to show the icon for the tab.\n   */\n  showIcon?: boolean;\n  /**\n   * Whether to allow scaling the font for the label for accessibility purposes.\n   */\n  allowFontScaling?: boolean;\n  /**\n   * Style object for the label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * Style object for the wrapper element.\n   */\n  style?: StyleProp<ViewStyle>;\n};\n\nexport default function BottomTabBarItem({\n  focused,\n  route,\n  label,\n  icon,\n  to,\n  button = ({\n    children,\n    style,\n    onPress,\n    to,\n    accessibilityRole,\n    ...rest\n  }: BottomTabBarButtonProps) => {\n    if (Platform.OS === 'web' && to) {\n      // React Native Web doesn't forward `onClick` if we use `TouchableWithoutFeedback`.\n      // We need to use `onClick` to be able to prevent default browser handling of links.\n      return (\n        <Link\n          {...rest}\n          to={to}\n          style={[styles.button, style]}\n          onPress={(e: any) => {\n            if (\n              !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && // ignore clicks with modifier keys\n              (e.button == null || e.button === 0) // ignore everything but left clicks\n            ) {\n              e.preventDefault();\n              onPress?.(e);\n            }\n          }}\n        >\n          {children}\n        </Link>\n      );\n    } else {\n      return (\n        <TouchableWithoutFeedback\n          {...rest}\n          accessibilityRole={accessibilityRole}\n          onPress={onPress}\n        >\n          <View style={style}>{children}</View>\n        </TouchableWithoutFeedback>\n      );\n    }\n  },\n  accessibilityLabel,\n  testID,\n  onPress,\n  onLongPress,\n  horizontal,\n  activeTintColor: customActiveTintColor,\n  inactiveTintColor: customInactiveTintColor,\n  activeBackgroundColor = 'transparent',\n  inactiveBackgroundColor = 'transparent',\n  showLabel = true,\n  showIcon = true,\n  allowFontScaling,\n  labelStyle,\n  style,\n}: Props) {\n  const { colors } = useTheme();\n\n  const activeTintColor =\n    customActiveTintColor === undefined\n      ? colors.primary\n      : customActiveTintColor;\n\n  const inactiveTintColor =\n    customInactiveTintColor === undefined\n      ? Color(colors.text).mix(Color(colors.card), 0.5).hex()\n      : customInactiveTintColor;\n\n  const renderLabel = ({ focused }: { focused: boolean }) => {\n    if (showLabel === false) {\n      return null;\n    }\n\n    const color = focused ? activeTintColor : inactiveTintColor;\n\n    if (typeof label === 'string') {\n      return (\n        <Animated.Text\n          numberOfLines={1}\n          style={[\n            styles.label,\n            { color },\n            showIcon && horizontal ? styles.labelBeside : styles.labelBeneath,\n            labelStyle,\n          ]}\n          allowFontScaling={allowFontScaling}\n        >\n          {label}\n        </Animated.Text>\n      );\n    }\n\n    if (typeof label === 'string') {\n      return label;\n    }\n\n    return label({ focused, color });\n  };\n\n  const renderIcon = ({ focused }: { focused: boolean }) => {\n    if (showIcon === false || icon === undefined) {\n      return null;\n    }\n\n    const activeOpacity = focused ? 1 : 0;\n    const inactiveOpacity = focused ? 0 : 1;\n\n    return (\n      <TabBarIcon\n        route={route}\n        size={horizontal ? 17 : 24}\n        activeOpacity={activeOpacity}\n        inactiveOpacity={inactiveOpacity}\n        activeTintColor={activeTintColor}\n        inactiveTintColor={inactiveTintColor}\n        renderIcon={icon}\n        style={horizontal ? styles.iconHorizontal : styles.iconVertical}\n      />\n    );\n  };\n\n  const scene = { route, focused };\n\n  const backgroundColor = focused\n    ? activeBackgroundColor\n    : inactiveBackgroundColor;\n\n  return button({\n    to,\n    onPress,\n    onLongPress,\n    testID,\n    accessibilityLabel,\n    accessibilityRole: 'button',\n    accessibilityStates: focused ? ['selected'] : [],\n    style: [\n      styles.tab,\n      { backgroundColor },\n      horizontal ? styles.tabLandscape : styles.tabPortrait,\n      style,\n    ],\n    children: (\n      <React.Fragment>\n        {renderIcon(scene)}\n        {renderLabel(scene)}\n      </React.Fragment>\n    ),\n  }) as React.ReactElement;\n}\n\nconst styles = StyleSheet.create({\n  tab: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column',\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  iconVertical: {\n    flex: 1,\n  },\n  iconHorizontal: {\n    height: '100%',\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n  },\n  labelBeneath: {\n    fontSize: 11,\n    marginBottom: 1.5,\n  },\n  labelBeside: {\n    fontSize: 12,\n    marginLeft: 20,\n  },\n  button: {\n    display: 'flex',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}