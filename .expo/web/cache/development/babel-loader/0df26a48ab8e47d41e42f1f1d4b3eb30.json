{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/janic/Developer/react-native-safe-area-context/src/index.tsx\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport NativeSafeAreaView from \"./NativeSafeAreaView\";\nexport { default as initialWindowSafeAreaInsets } from \"./InitialWindowSafeAreaInsets\";\nexport var SafeAreaContext = React.createContext(null);\nexport function SafeAreaProvider(_ref) {\n  var children = _ref.children,\n    initialSafeAreaInsets = _ref.initialSafeAreaInsets;\n  var parentInsets = useParentSafeArea();\n  var _React$useState = React.useState(initialSafeAreaInsets || parentInsets),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    insets = _React$useState2[0],\n    setInsets = _React$useState2[1];\n  var onInsetsChange = React.useCallback(function (event) {\n    setInsets(event.nativeEvent.insets);\n  }, []);\n  return React.createElement(NativeSafeAreaView, {\n    style: styles.fill,\n    onInsetsChange: onInsetsChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    }\n  }, insets != null ? React.createElement(SafeAreaContext.Provider, {\n    value: insets,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    }\n  }, children) : null);\n}\nvar styles = StyleSheet.create({\n  fill: {\n    flex: 1\n  }\n});\nexport var SafeAreaConsumer = SafeAreaContext.Consumer;\nfunction useParentSafeArea() {\n  return React.useContext(SafeAreaContext);\n}\nexport function useSafeArea() {\n  var safeArea = React.useContext(SafeAreaContext);\n  if (safeArea == null) {\n    throw new Error('No safe area value available. Make sure you are rendering `<SafeAreaProvider>` at the top of your app.');\n  }\n  return safeArea;\n}\nexport function SafeAreaView(_ref2) {\n  var style = _ref2.style,\n    rest = _objectWithoutProperties(_ref2, [\"style\"]);\n  var insets = useSafeArea();\n  return React.createElement(View, _extends({\n    style: [{\n      paddingTop: insets.top,\n      paddingRight: insets.right,\n      paddingBottom: insets.bottom,\n      paddingLeft: insets.left\n    }, style]\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    }\n  }));\n}","map":{"version":3,"sources":["index.tsx"],"names":["React","NativeSafeAreaView","default","initialWindowSafeAreaInsets","SafeAreaContext","createContext","SafeAreaProvider","children","initialSafeAreaInsets","parentInsets","useParentSafeArea","insets","setInsets","useState","onInsetsChange","useCallback","event","nativeEvent","styles","fill","StyleSheet","create","flex","SafeAreaConsumer","Consumer","useContext","useSafeArea","safeArea","Error","SafeAreaView","style","rest","paddingTop","top","paddingRight","right","paddingBottom","bottom","paddingLeft","left"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA;AAAA;AAEA,OAAOC,kBAAP;AAEA,SAASC,OAAO,IAAIC,2BAApB;AAEA,OAAO,IAAMC,eAAe,GAAGJ,KAAK,CAACK,aAANL,CAAwC,IAAxCA,CAAxB;AAOP,OAAO,SAASM,gBAAT,CAAA,IAAA,EAGe;EAFpBC,IAAAA,QAEoB,GAAA,IAAA,CAFpBA,QAEoB;IADpBC,qBACoB,GAAA,IAAA,CADpBA,qBACoB;EACpB,IAAMC,YAAY,GAAGC,iBAAiB,EAAtC;EADoB,IAAA,eAAA,GAEQV,KAAK,CAACa,QAANb,CAC1BQ,qBAAqB,IAAIC,YADCT,CAFR;IAAA,gBAAA,GAAA,cAAA,CAAA,eAAA,EAAA,CAAA,CAAA;IAEbW,MAFa,GAAA,gBAAA,CAAA,CAAA,CAAA;IAELC,SAFK,GAAA,gBAAA,CAAA,CAAA,CAAA;EAKpB,IAAME,cAAc,GAAGd,KAAK,CAACe,WAANf,CAAkB,UAACgB,KAAD,EAA8B;IACrEJ,SAAS,CAACI,KAAK,CAACC,WAAND,CAAkBL,MAAnB,CAATC;EACD,CAFsBZ,EAEpB,EAFoBA,CAAvB;EAIA,OACE,KAAA,CAAA,aAAA,CAAC,kBAAD,EAAA;IAAoB,KAAK,EAAEkB,MAAM,CAACC,IAAlC;IAAwC,cAAc,EAAEL,cAAxD;IAAA,QAAA,EAAA;MAAA,QAAA,EAAA,YAAA;MAAA,UAAA,EAAA;IAAA;EAAA,CAAA,EACGH,MAAM,IAAI,IAAVA,GACC,KAAA,CAAA,aAAA,CAAC,eAAD,CAAiB,QAAjB,EAAA;IAA0B,KAAK,EAAEA,MAAjC;IAAA,QAAA,EAAA;MAAA,QAAA,EAAA,YAAA;MAAA,UAAA,EAAA;IAAA;EAAA,CAAA,EACGJ,QADH,CADDI,GAIG,IALN,CADF;AASD;AAED,IAAMO,MAAM,GAAGE,UAAU,CAACC,MAAXD,CAAkB;EAC/BD,IAAI,EAAE;IAAEG,IAAI,EAAE;EAAR;AADyB,CAAlBF,CAAf;AAIA,OAAO,IAAMG,gBAAgB,GAAGnB,eAAe,CAACoB,QAAzC;AAEP,SAASd,iBAAT,GAAwE;EACtE,OAAOV,KAAK,CAACyB,UAANzB,CAAiBI,eAAjBJ,CAAP;AACD;AAED,OAAO,SAAS0B,WAAT,GAAoC;EACzC,IAAMC,QAAQ,GAAG3B,KAAK,CAACyB,UAANzB,CAAiBI,eAAjBJ,CAAjB;EACA,IAAI2B,QAAQ,IAAI,IAAhB,EAAsB;IACpB,MAAM,IAAIC,KAAJ,CACJ,wGADI,CAAN;EAGD;EACD,OAAOD,QAAP;AACD;AAED,OAAO,SAASE,YAAT,CAAA,KAAA,EAGuC;EAF5CC,IAAAA,KAE4C,GAAA,KAAA,CAF5CA,KAE4C;IADzCC,IACyC,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,OAAA,CAAA,CAAA;EAC5C,IAAMpB,MAAM,GAAGe,WAAW,EAA1B;EAEA,OACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA,QAAA,CAAA;IACE,KAAK,EAAE,CACL;MACEM,UAAU,EAAErB,MAAM,CAACsB,GADrB;MAEEC,YAAY,EAAEvB,MAAM,CAACwB,KAFvB;MAGEC,aAAa,EAAEzB,MAAM,CAAC0B,MAHxB;MAIEC,WAAW,EAAE3B,MAAM,CAAC4B;IAJtB,CADK,EAOLT,KAPK;EADT,CAAA,EAUMC,IAVN,EAAA;IAAA,QAAA,EAAA;MAAA,QAAA,EAAA,YAAA;MAAA,UAAA,EAAA;IAAA;EAAA,CAAA,CAAA,CADF;AAcD","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, ViewProps } from 'react-native';\nimport { EdgeInsets as EdgeInsetsT, InsetChangedEvent } from './SafeArea.types';\nimport NativeSafeAreaView from './NativeSafeAreaView';\n\nexport { default as initialWindowSafeAreaInsets } from './InitialWindowSafeAreaInsets';\n\nexport const SafeAreaContext = React.createContext<EdgeInsetsT | null>(null);\n\nexport interface SafeAreaViewProps {\n  children?: React.ReactNode;\n  initialSafeAreaInsets?: EdgeInsetsT | null;\n}\n\nexport function SafeAreaProvider({\n  children,\n  initialSafeAreaInsets,\n}: SafeAreaViewProps) {\n  const parentInsets = useParentSafeArea();\n  const [insets, setInsets] = React.useState<EdgeInsetsT | null | undefined>(\n    initialSafeAreaInsets || parentInsets,\n  );\n  const onInsetsChange = React.useCallback((event: InsetChangedEvent) => {\n    setInsets(event.nativeEvent.insets);\n  }, []);\n\n  return (\n    <NativeSafeAreaView style={styles.fill} onInsetsChange={onInsetsChange}>\n      {insets != null ? (\n        <SafeAreaContext.Provider value={insets}>\n          {children}\n        </SafeAreaContext.Provider>\n      ) : null}\n    </NativeSafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fill: { flex: 1 },\n});\n\nexport const SafeAreaConsumer = SafeAreaContext.Consumer;\n\nfunction useParentSafeArea(): React.ContextType<typeof SafeAreaContext> {\n  return React.useContext(SafeAreaContext);\n}\n\nexport function useSafeArea(): EdgeInsetsT {\n  const safeArea = React.useContext(SafeAreaContext);\n  if (safeArea == null) {\n    throw new Error(\n      'No safe area value available. Make sure you are rendering `<SafeAreaProvider>` at the top of your app.',\n    );\n  }\n  return safeArea;\n}\n\nexport function SafeAreaView({\n  style,\n  ...rest\n}: ViewProps & { children: React.ReactNode }) {\n  const insets = useSafeArea();\n\n  return (\n    <View\n      style={[\n        {\n          paddingTop: insets.top,\n          paddingRight: insets.right,\n          paddingBottom: insets.bottom,\n          paddingLeft: insets.left,\n        },\n        style,\n      ]}\n      {...rest}\n    />\n  );\n}\n\nexport type EdgeInsets = EdgeInsetsT;\n"]},"metadata":{},"sourceType":"module"}