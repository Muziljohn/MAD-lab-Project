{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _color = _interopRequireDefault(require(\"color\"));\nvar _CardSheet = _interopRequireDefault(require(\"./CardSheet\"));\nvar _GestureHandler = require(\"../GestureHandler\");\nvar _CardAnimationContext = _interopRequireDefault(require(\"../../utils/CardAnimationContext\"));\nvar _getDistanceForDirection = _interopRequireDefault(require(\"../../utils/getDistanceForDirection\"));\nvar _getInvertedMultiplier = _interopRequireDefault(require(\"../../utils/getInvertedMultiplier\"));\nvar _memoize = _interopRequireDefault(require(\"../../utils/memoize\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar GESTURE_VELOCITY_IMPACT = 0.3;\nvar TRUE = 1;\nvar FALSE = 0;\nvar GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nvar GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\nvar useNativeDriver = _reactNative.Platform.OS !== 'web';\nvar Card = function (_React$Component) {\n  (0, _inherits2.default)(Card, _React$Component);\n  var _super = _createSuper(Card);\n  function Card() {\n    var _this;\n    (0, _classCallCheck2.default)(this, Card);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"isClosing\", new _reactNative.Animated.Value(FALSE));\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"inverted\", new _reactNative.Animated.Value((0, _getInvertedMultiplier.default)(_this.props.gestureDirection)));\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"layout\", {\n      width: new _reactNative.Animated.Value(_this.props.layout.width),\n      height: new _reactNative.Animated.Value(_this.props.layout.height)\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"isSwiping\", new _reactNative.Animated.Value(FALSE));\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"interactionHandle\", void 0);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"pendingGestureCallback\", void 0);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"animate\", function (_ref) {\n      var closing = _ref.closing,\n        velocity = _ref.velocity;\n      var _this$props2 = _this.props,\n        gesture = _this$props2.gesture,\n        transitionSpec = _this$props2.transitionSpec,\n        onOpen = _this$props2.onOpen,\n        onClose = _this$props2.onClose,\n        onTransitionStart = _this$props2.onTransitionStart;\n      var toValue = _this.getAnimateToValue(_objectSpread(_objectSpread({}, _this.props), {}, {\n        closing: closing\n      }));\n      var spec = closing ? transitionSpec.close : transitionSpec.open;\n      var animation = spec.animation === 'spring' ? _reactNative.Animated.spring : _reactNative.Animated.timing;\n      _this.setPointerEventsEnabled(!closing);\n      _this.handleStartInteraction();\n      clearTimeout(_this.pendingGestureCallback);\n      onTransitionStart === null || onTransitionStart === void 0 ? void 0 : onTransitionStart({\n        closing: closing\n      });\n      animation(gesture, _objectSpread(_objectSpread({}, spec.config), {}, {\n        velocity: velocity,\n        toValue: toValue,\n        useNativeDriver: useNativeDriver,\n        isInteraction: false\n      })).start(function (_ref2) {\n        var finished = _ref2.finished;\n        _this.handleEndInteraction();\n        clearTimeout(_this.pendingGestureCallback);\n        if (finished) {\n          if (closing) {\n            onClose();\n          } else {\n            onOpen();\n          }\n        }\n      });\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"getAnimateToValue\", function (_ref3) {\n      var closing = _ref3.closing,\n        layout = _ref3.layout,\n        gestureDirection = _ref3.gestureDirection;\n      if (!closing) {\n        return 0;\n      }\n      return (0, _getDistanceForDirection.default)(layout, gestureDirection);\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"setPointerEventsEnabled\", function (enabled) {\n      var _this$contentRef$curr;\n      var pointerEvents = enabled ? 'box-none' : 'none';\n      (_this$contentRef$curr = _this.contentRef.current) === null || _this$contentRef$curr === void 0 ? void 0 : _this$contentRef$curr.setNativeProps({\n        pointerEvents: pointerEvents\n      });\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"handleStartInteraction\", function () {\n      if (_this.interactionHandle === undefined) {\n        _this.interactionHandle = _reactNative.InteractionManager.createInteractionHandle();\n      }\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"handleEndInteraction\", function () {\n      if (_this.interactionHandle !== undefined) {\n        _reactNative.InteractionManager.clearInteractionHandle(_this.interactionHandle);\n        _this.interactionHandle = undefined;\n      }\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"handleGestureStateChange\", function (_ref4) {\n      var nativeEvent = _ref4.nativeEvent;\n      var _this$props3 = _this.props,\n        layout = _this$props3.layout,\n        onClose = _this$props3.onClose,\n        onGestureBegin = _this$props3.onGestureBegin,\n        onGestureCanceled = _this$props3.onGestureCanceled,\n        onGestureEnd = _this$props3.onGestureEnd,\n        gestureDirection = _this$props3.gestureDirection,\n        gestureVelocityImpact = _this$props3.gestureVelocityImpact;\n      switch (nativeEvent.state) {\n        case _GestureHandler.GestureState.BEGAN:\n          _this.isSwiping.setValue(TRUE);\n          _this.handleStartInteraction();\n          onGestureBegin === null || onGestureBegin === void 0 ? void 0 : onGestureBegin();\n          break;\n        case _GestureHandler.GestureState.CANCELLED:\n          {\n            _this.isSwiping.setValue(FALSE);\n            _this.handleEndInteraction();\n            var velocity = gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? nativeEvent.velocityY : nativeEvent.velocityX;\n            _this.animate({\n              closing: _this.props.closing,\n              velocity: velocity\n            });\n            onGestureCanceled === null || onGestureCanceled === void 0 ? void 0 : onGestureCanceled();\n            break;\n          }\n        case _GestureHandler.GestureState.END:\n          {\n            _this.isSwiping.setValue(FALSE);\n            var distance;\n            var translation;\n            var _velocity;\n            if (gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted') {\n              distance = layout.height;\n              translation = nativeEvent.translationY;\n              _velocity = nativeEvent.velocityY;\n            } else {\n              distance = layout.width;\n              translation = nativeEvent.translationX;\n              _velocity = nativeEvent.velocityX;\n            }\n            var closing = (translation + _velocity * gestureVelocityImpact) * (0, _getInvertedMultiplier.default)(gestureDirection) > distance / 2 ? _velocity !== 0 || translation !== 0 : _this.props.closing;\n            _this.animate({\n              closing: closing,\n              velocity: _velocity\n            });\n            if (closing) {\n              _this.pendingGestureCallback = setTimeout(onClose, 32);\n            }\n            onGestureEnd === null || onGestureEnd === void 0 ? void 0 : onGestureEnd();\n            break;\n          }\n      }\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"getInterpolatedStyle\", (0, _memoize.default)(function (styleInterpolator, index, current, next, layout, insetTop, insetRight, insetBottom, insetLeft) {\n      return styleInterpolator({\n        index: index,\n        current: {\n          progress: current\n        },\n        next: next && {\n          progress: next\n        },\n        closing: _this.isClosing,\n        swiping: _this.isSwiping,\n        inverted: _this.inverted,\n        layouts: {\n          screen: layout\n        },\n        insets: {\n          top: insetTop,\n          right: insetRight,\n          bottom: insetBottom,\n          left: insetLeft\n        }\n      });\n    }));\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"getCardAnimationContext\", (0, _memoize.default)(function (index, current, next, layout, insetTop, insetRight, insetBottom, insetLeft) {\n      return {\n        index: index,\n        current: {\n          progress: current\n        },\n        next: next && {\n          progress: next\n        },\n        closing: _this.isClosing,\n        swiping: _this.isSwiping,\n        inverted: _this.inverted,\n        layouts: {\n          screen: layout\n        },\n        insets: {\n          top: insetTop,\n          right: insetRight,\n          bottom: insetBottom,\n          left: insetLeft\n        }\n      };\n    }));\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"contentRef\", React.createRef());\n    return _this;\n  }\n  (0, _createClass2.default)(Card, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.animate({\n        closing: this.props.closing\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props4 = this.props,\n        layout = _this$props4.layout,\n        gestureDirection = _this$props4.gestureDirection,\n        closing = _this$props4.closing;\n      var width = layout.width,\n        height = layout.height;\n      if (width !== prevProps.layout.width) {\n        this.layout.width.setValue(width);\n      }\n      if (height !== prevProps.layout.height) {\n        this.layout.height.setValue(height);\n      }\n      if (gestureDirection !== prevProps.gestureDirection) {\n        this.inverted.setValue((0, _getInvertedMultiplier.default)(gestureDirection));\n      }\n      if (this.getAnimateToValue(this.props) !== this.getAnimateToValue(prevProps)) {\n        this.animate({\n          closing: closing\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.handleEndInteraction();\n    }\n  }, {\n    key: \"gestureActivationCriteria\",\n    value: function gestureActivationCriteria() {\n      var _this$props5 = this.props,\n        layout = _this$props5.layout,\n        gestureDirection = _this$props5.gestureDirection,\n        gestureResponseDistance = _this$props5.gestureResponseDistance;\n      var distance = gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? (gestureResponseDistance === null || gestureResponseDistance === void 0 ? void 0 : gestureResponseDistance.vertical) !== undefined ? gestureResponseDistance.vertical : GESTURE_RESPONSE_DISTANCE_VERTICAL : (gestureResponseDistance === null || gestureResponseDistance === void 0 ? void 0 : gestureResponseDistance.horizontal) !== undefined ? gestureResponseDistance.horizontal : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n      if (gestureDirection === 'vertical') {\n        return {\n          maxDeltaX: 15,\n          minOffsetY: 5,\n          hitSlop: {\n            bottom: -layout.height + distance\n          }\n        };\n      } else if (gestureDirection === 'vertical-inverted') {\n        return {\n          maxDeltaX: 15,\n          minOffsetY: -5,\n          hitSlop: {\n            top: -layout.height + distance\n          }\n        };\n      } else {\n        var hitSlop = -layout.width + distance;\n        var invertedMultiplier = (0, _getInvertedMultiplier.default)(gestureDirection);\n        if (invertedMultiplier === 1) {\n          return {\n            minOffsetX: 5,\n            maxDeltaY: 20,\n            hitSlop: {\n              right: hitSlop\n            }\n          };\n        } else {\n          return {\n            minOffsetX: -5,\n            maxDeltaY: 20,\n            hitSlop: {\n              left: hitSlop\n            }\n          };\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        styleInterpolator = _this$props.styleInterpolator,\n        index = _this$props.index,\n        current = _this$props.current,\n        gesture = _this$props.gesture,\n        next = _this$props.next,\n        layout = _this$props.layout,\n        insets = _this$props.insets,\n        overlay = _this$props.overlay,\n        overlayEnabled = _this$props.overlayEnabled,\n        shadowEnabled = _this$props.shadowEnabled,\n        gestureEnabled = _this$props.gestureEnabled,\n        gestureDirection = _this$props.gestureDirection,\n        pageOverflowEnabled = _this$props.pageOverflowEnabled,\n        children = _this$props.children,\n        customContainerStyle = _this$props.containerStyle,\n        contentStyle = _this$props.contentStyle,\n        rest = _objectWithoutProperties(_this$props, [\"styleInterpolator\", \"index\", \"current\", \"gesture\", \"next\", \"layout\", \"insets\", \"overlay\", \"overlayEnabled\", \"shadowEnabled\", \"gestureEnabled\", \"gestureDirection\", \"pageOverflowEnabled\", \"children\", \"containerStyle\", \"contentStyle\"]);\n      var interpolatedStyle = this.getInterpolatedStyle(styleInterpolator, index, current, next, layout, insets.top, insets.right, insets.bottom, insets.left);\n      var animationContext = this.getCardAnimationContext(index, current, next, layout, insets.top, insets.right, insets.bottom, insets.left);\n      var containerStyle = interpolatedStyle.containerStyle,\n        cardStyle = interpolatedStyle.cardStyle,\n        overlayStyle = interpolatedStyle.overlayStyle,\n        shadowStyle = interpolatedStyle.shadowStyle;\n      var handleGestureEvent = gestureEnabled ? _reactNative.Animated.event([{\n        nativeEvent: gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? {\n          translationY: gesture\n        } : {\n          translationX: gesture\n        }\n      }], {\n        useNativeDriver: useNativeDriver\n      }) : undefined;\n      var _StyleSheet$flatten = _reactNative.StyleSheet.flatten(contentStyle || {}),\n        backgroundColor = _StyleSheet$flatten.backgroundColor;\n      var isTransparent = backgroundColor ? (0, _color.default)(backgroundColor).alpha() === 0 : false;\n      return React.createElement(_CardAnimationContext.default.Provider, {\n        value: animationContext\n      }, React.createElement(_reactNative.View, _extends({\n        pointerEvents: \"box-none\"\n      }, rest), overlayEnabled ? React.createElement(_reactNative.View, {\n        pointerEvents: \"box-none\",\n        style: _reactNative.StyleSheet.absoluteFill\n      }, overlay({\n        style: overlayStyle\n      })) : null, React.createElement(_reactNative.Animated.View, {\n        style: [styles.container, containerStyle, customContainerStyle],\n        pointerEvents: \"box-none\"\n      }, React.createElement(_GestureHandler.PanGestureHandler, _extends({\n        enabled: layout.width !== 0 && gestureEnabled,\n        onGestureEvent: handleGestureEvent,\n        onHandlerStateChange: this.handleGestureStateChange\n      }, this.gestureActivationCriteria()), React.createElement(_reactNative.Animated.View, {\n        style: [styles.container, cardStyle]\n      }, shadowEnabled && shadowStyle && !isTransparent ? React.createElement(_reactNative.Animated.View, {\n        style: [styles.shadow, gestureDirection === 'horizontal' ? [styles.shadowHorizontal, styles.shadowLeft] : gestureDirection === 'horizontal-inverted' ? [styles.shadowHorizontal, styles.shadowRight] : gestureDirection === 'vertical' ? [styles.shadowVertical, styles.shadowTop] : [styles.shadowVertical, styles.shadowBottom], {\n          backgroundColor: backgroundColor\n        }, shadowStyle],\n        pointerEvents: \"none\"\n      }) : null, React.createElement(_CardSheet.default, {\n        ref: this.contentRef,\n        enabled: pageOverflowEnabled,\n        layout: layout,\n        style: contentStyle\n      }, children))))));\n    }\n  }]);\n  return Card;\n}(React.Component);\nexports.default = Card;\n_defineProperty(Card, \"defaultProps\", {\n  overlayEnabled: _reactNative.Platform.OS !== 'ios',\n  shadowEnabled: true,\n  gestureEnabled: true,\n  gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n  overlay: function overlay(_ref5) {\n    var style = _ref5.style;\n    return style ? React.createElement(_reactNative.Animated.View, {\n      pointerEvents: \"none\",\n      style: [styles.overlay, style]\n    }) : null;\n  }\n});\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: {\n      width: -1,\n      height: 1\n    }\n  },\n  shadowLeft: {\n    left: 0\n  },\n  shadowRight: {\n    right: 0\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: {\n      width: 1,\n      height: -1\n    }\n  },\n  shadowTop: {\n    top: 0\n  },\n  shadowBottom: {\n    bottom: 0\n  }\n});","map":{"version":3,"sources":["Card.tsx"],"names":["GESTURE_VELOCITY_IMPACT","TRUE","FALSE","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","useNativeDriver","Platform","OS","Card","React","Component","overlayEnabled","shadowEnabled","gestureEnabled","gestureVelocityImpact","overlay","style","styles","componentDidMount","animate","closing","props","componentDidUpdate","prevProps","layout","gestureDirection","width","height","setValue","inverted","getInvertedMultiplier","getAnimateToValue","componentWillUnmount","handleEndInteraction","Animated","Value","velocity","gesture","transitionSpec","onOpen","onClose","onTransitionStart","toValue","spec","close","open","animation","spring","timing","setPointerEventsEnabled","handleStartInteraction","clearTimeout","pendingGestureCallback","config","isInteraction","start","finished","getDistanceForDirection","enabled","pointerEvents","contentRef","current","setNativeProps","interactionHandle","undefined","InteractionManager","createInteractionHandle","clearInteractionHandle","nativeEvent","onGestureBegin","onGestureCanceled","onGestureEnd","state","GestureState","BEGAN","isSwiping","CANCELLED","velocityY","velocityX","END","distance","translation","translationY","translationX","setTimeout","memoize","styleInterpolator","index","next","insetTop","insetRight","insetBottom","insetLeft","progress","isClosing","swiping","layouts","screen","insets","top","right","bottom","left","gestureResponseDistance","vertical","horizontal","maxDeltaX","minOffsetY","hitSlop","invertedMultiplier","minOffsetX","maxDeltaY","createRef","render","pageOverflowEnabled","children","containerStyle","customContainerStyle","contentStyle","rest","interpolatedStyle","getInterpolatedStyle","animationContext","getCardAnimationContext","cardStyle","overlayStyle","shadowStyle","handleGestureEvent","event","backgroundColor","StyleSheet","flatten","isTransparent","Color","alpha","absoluteFill","container","handleGestureStateChange","gestureActivationCriteria","shadow","shadowHorizontal","shadowLeft","shadowRight","shadowVertical","shadowTop","shadowBottom","create","flex","position","shadowRadius","shadowColor","shadowOpacity","shadowOffset"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  View,\n  StyleSheet,\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n  Platform,\n  InteractionManager,\n} from 'react-native';\nimport { EdgeInsets } from 'react-native-safe-area-context';\nimport Color from 'color';\n\nimport CardSheet from './CardSheet';\nimport {\n  PanGestureHandler,\n  GestureState,\n  PanGestureHandlerGestureEvent,\n} from '../GestureHandler';\nimport CardAnimationContext from '../../utils/CardAnimationContext';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport getInvertedMultiplier from '../../utils/getInvertedMultiplier';\nimport memoize from '../../utils/memoize';\nimport {\n  TransitionSpec,\n  StackCardStyleInterpolator,\n  GestureDirection,\n  Layout,\n} from '../../types';\n\ntype Props = ViewProps & {\n  index: number;\n  closing: boolean;\n  next?: Animated.AnimatedInterpolation;\n  current: Animated.AnimatedInterpolation;\n  gesture: Animated.Value;\n  layout: Layout;\n  insets: EdgeInsets;\n  pageOverflowEnabled: boolean;\n  gestureDirection: GestureDirection;\n  onOpen: () => void;\n  onClose: () => void;\n  onTransitionStart?: (props: { closing: boolean }) => void;\n  onGestureBegin?: () => void;\n  onGestureCanceled?: () => void;\n  onGestureEnd?: () => void;\n  children: React.ReactNode;\n  overlay: (props: { style: StyleProp<ViewStyle> }) => React.ReactNode;\n  overlayEnabled: boolean;\n  shadowEnabled: boolean;\n  gestureEnabled: boolean;\n  gestureResponseDistance?: {\n    vertical?: number;\n    horizontal?: number;\n  };\n  gestureVelocityImpact: number;\n  transitionSpec: {\n    open: TransitionSpec;\n    close: TransitionSpec;\n  };\n  styleInterpolator: StackCardStyleInterpolator;\n  containerStyle?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n};\n\nconst GESTURE_VELOCITY_IMPACT = 0.3;\n\nconst TRUE = 1;\nconst FALSE = 0;\n\n/**\n * The distance of touch start from the edge of the screen where the gesture will be recognized\n */\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nexport default class Card extends React.Component<Props> {\n  static defaultProps = {\n    overlayEnabled: Platform.OS !== 'ios',\n    shadowEnabled: true,\n    gestureEnabled: true,\n    gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n    overlay: ({ style }: { style: StyleProp<ViewStyle> }) =>\n      style ? (\n        <Animated.View pointerEvents=\"none\" style={[styles.overlay, style]} />\n      ) : null,\n  };\n\n  componentDidMount() {\n    this.animate({ closing: this.props.closing });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { layout, gestureDirection, closing } = this.props;\n    const { width, height } = layout;\n\n    if (width !== prevProps.layout.width) {\n      this.layout.width.setValue(width);\n    }\n\n    if (height !== prevProps.layout.height) {\n      this.layout.height.setValue(height);\n    }\n\n    if (gestureDirection !== prevProps.gestureDirection) {\n      this.inverted.setValue(getInvertedMultiplier(gestureDirection));\n    }\n\n    if (\n      this.getAnimateToValue(this.props) !== this.getAnimateToValue(prevProps)\n    ) {\n      // We need to trigger the animation when route was closed\n      // Thr route might have been closed by a `POP` action or by a gesture\n      // When route was closed due to a gesture, the animation would've happened already\n      // It's still important to trigger the animation so that `onClose` is called\n      // If `onClose` is not called, cleanup step won't be performed for gestures\n      this.animate({ closing });\n    }\n  }\n\n  componentWillUnmount() {\n    this.handleEndInteraction();\n  }\n\n  private isClosing = new Animated.Value(FALSE);\n\n  private inverted = new Animated.Value(\n    getInvertedMultiplier(this.props.gestureDirection)\n  );\n\n  private layout = {\n    width: new Animated.Value(this.props.layout.width),\n    height: new Animated.Value(this.props.layout.height),\n  };\n\n  private isSwiping = new Animated.Value(FALSE);\n\n  private interactionHandle: number | undefined;\n\n  private pendingGestureCallback: number | undefined;\n\n  private animate = ({\n    closing,\n    velocity,\n  }: {\n    closing: boolean;\n    velocity?: number;\n  }) => {\n    const {\n      gesture,\n      transitionSpec,\n      onOpen,\n      onClose,\n      onTransitionStart,\n    } = this.props;\n\n    const toValue = this.getAnimateToValue({\n      ...this.props,\n      closing,\n    });\n\n    const spec = closing ? transitionSpec.close : transitionSpec.open;\n\n    const animation =\n      spec.animation === 'spring' ? Animated.spring : Animated.timing;\n\n    this.setPointerEventsEnabled(!closing);\n    this.handleStartInteraction();\n\n    clearTimeout(this.pendingGestureCallback);\n\n    onTransitionStart?.({ closing });\n    animation(gesture, {\n      ...spec.config,\n      velocity,\n      toValue,\n      useNativeDriver,\n      isInteraction: false,\n    }).start(({ finished }) => {\n      this.handleEndInteraction();\n\n      clearTimeout(this.pendingGestureCallback);\n\n      if (finished) {\n        if (closing) {\n          onClose();\n        } else {\n          onOpen();\n        }\n      }\n    });\n  };\n\n  private getAnimateToValue = ({\n    closing,\n    layout,\n    gestureDirection,\n  }: {\n    closing?: boolean;\n    layout: Layout;\n    gestureDirection: GestureDirection;\n  }) => {\n    if (!closing) {\n      return 0;\n    }\n\n    return getDistanceForDirection(layout, gestureDirection);\n  };\n\n  private setPointerEventsEnabled = (enabled: boolean) => {\n    const pointerEvents = enabled ? 'box-none' : 'none';\n\n    this.contentRef.current?.setNativeProps({ pointerEvents });\n  };\n\n  private handleStartInteraction = () => {\n    if (this.interactionHandle === undefined) {\n      this.interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  };\n\n  private handleEndInteraction = () => {\n    if (this.interactionHandle !== undefined) {\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\n      this.interactionHandle = undefined;\n    }\n  };\n\n  private handleGestureStateChange = ({\n    nativeEvent,\n  }: PanGestureHandlerGestureEvent) => {\n    const {\n      layout,\n      onClose,\n      onGestureBegin,\n      onGestureCanceled,\n      onGestureEnd,\n      gestureDirection,\n      gestureVelocityImpact,\n    } = this.props;\n\n    switch (nativeEvent.state) {\n      case GestureState.BEGAN:\n        this.isSwiping.setValue(TRUE);\n        this.handleStartInteraction();\n        onGestureBegin?.();\n        break;\n      case GestureState.CANCELLED: {\n        this.isSwiping.setValue(FALSE);\n        this.handleEndInteraction();\n\n        const velocity =\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n            ? nativeEvent.velocityY\n            : nativeEvent.velocityX;\n\n        this.animate({ closing: this.props.closing, velocity });\n\n        onGestureCanceled?.();\n        break;\n      }\n      case GestureState.END: {\n        this.isSwiping.setValue(FALSE);\n\n        let distance;\n        let translation;\n        let velocity;\n\n        if (\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n        ) {\n          distance = layout.height;\n          translation = nativeEvent.translationY;\n          velocity = nativeEvent.velocityY;\n        } else {\n          distance = layout.width;\n          translation = nativeEvent.translationX;\n          velocity = nativeEvent.velocityX;\n        }\n\n        const closing =\n          (translation + velocity * gestureVelocityImpact) *\n            getInvertedMultiplier(gestureDirection) >\n          distance / 2\n            ? velocity !== 0 || translation !== 0\n            : this.props.closing;\n\n        this.animate({ closing, velocity });\n\n        if (closing) {\n          // We call onClose with a delay to make sure that the animation has already started\n          // This will make sure that the state update caused by this doesn't affect start of animation\n          this.pendingGestureCallback = (setTimeout(\n            onClose,\n            32\n          ) as any) as number;\n        }\n\n        onGestureEnd?.();\n        break;\n      }\n    }\n  };\n\n  // Memoize this to avoid extra work on re-render\n  private getInterpolatedStyle = memoize(\n    (\n      styleInterpolator: StackCardStyleInterpolator,\n      index: number,\n      current: Animated.AnimatedInterpolation,\n      next: Animated.AnimatedInterpolation | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) =>\n      styleInterpolator({\n        index,\n        current: { progress: current },\n        next: next && { progress: next },\n        closing: this.isClosing,\n        swiping: this.isSwiping,\n        inverted: this.inverted,\n        layouts: {\n          screen: layout,\n        },\n        insets: {\n          top: insetTop,\n          right: insetRight,\n          bottom: insetBottom,\n          left: insetLeft,\n        },\n      })\n  );\n\n  // Keep track of the animation context when deps changes.\n  private getCardAnimationContext = memoize(\n    (\n      index: number,\n      current: Animated.AnimatedInterpolation,\n      next: Animated.AnimatedInterpolation | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) => ({\n      index,\n      current: { progress: current },\n      next: next && { progress: next },\n      closing: this.isClosing,\n      swiping: this.isSwiping,\n      inverted: this.inverted,\n      layouts: {\n        screen: layout,\n      },\n      insets: {\n        top: insetTop,\n        right: insetRight,\n        bottom: insetBottom,\n        left: insetLeft,\n      },\n    })\n  );\n\n  private gestureActivationCriteria() {\n    const { layout, gestureDirection, gestureResponseDistance } = this.props;\n\n    const distance =\n      gestureDirection === 'vertical' ||\n      gestureDirection === 'vertical-inverted'\n        ? gestureResponseDistance?.vertical !== undefined\n          ? gestureResponseDistance.vertical\n          : GESTURE_RESPONSE_DISTANCE_VERTICAL\n        : gestureResponseDistance?.horizontal !== undefined\n        ? gestureResponseDistance.horizontal\n        : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n\n    if (gestureDirection === 'vertical') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: 5,\n        hitSlop: { bottom: -layout.height + distance },\n      };\n    } else if (gestureDirection === 'vertical-inverted') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: -5,\n        hitSlop: { top: -layout.height + distance },\n      };\n    } else {\n      const hitSlop = -layout.width + distance;\n      const invertedMultiplier = getInvertedMultiplier(gestureDirection);\n\n      if (invertedMultiplier === 1) {\n        return {\n          minOffsetX: 5,\n          maxDeltaY: 20,\n          hitSlop: { right: hitSlop },\n        };\n      } else {\n        return {\n          minOffsetX: -5,\n          maxDeltaY: 20,\n          hitSlop: { left: hitSlop },\n        };\n      }\n    }\n  }\n\n  private contentRef = React.createRef<View>();\n\n  render() {\n    const {\n      styleInterpolator,\n      index,\n      current,\n      gesture,\n      next,\n      layout,\n      insets,\n      overlay,\n      overlayEnabled,\n      shadowEnabled,\n      gestureEnabled,\n      gestureDirection,\n      pageOverflowEnabled,\n      children,\n      containerStyle: customContainerStyle,\n      contentStyle,\n      ...rest\n    } = this.props;\n\n    const interpolatedStyle = this.getInterpolatedStyle(\n      styleInterpolator,\n      index,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const animationContext = this.getCardAnimationContext(\n      index,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const {\n      containerStyle,\n      cardStyle,\n      overlayStyle,\n      shadowStyle,\n    } = interpolatedStyle;\n\n    const handleGestureEvent = gestureEnabled\n      ? Animated.event(\n          [\n            {\n              nativeEvent:\n                gestureDirection === 'vertical' ||\n                gestureDirection === 'vertical-inverted'\n                  ? { translationY: gesture }\n                  : { translationX: gesture },\n            },\n          ],\n          { useNativeDriver }\n        )\n      : undefined;\n\n    const { backgroundColor } = StyleSheet.flatten(contentStyle || {});\n    const isTransparent = backgroundColor\n      ? Color(backgroundColor).alpha() === 0\n      : false;\n\n    return (\n      <CardAnimationContext.Provider value={animationContext}>\n        <View pointerEvents=\"box-none\" {...rest}>\n          {overlayEnabled ? (\n            <View pointerEvents=\"box-none\" style={StyleSheet.absoluteFill}>\n              {overlay({ style: overlayStyle })}\n            </View>\n          ) : null}\n          <Animated.View\n            style={[styles.container, containerStyle, customContainerStyle]}\n            pointerEvents=\"box-none\"\n          >\n            <PanGestureHandler\n              enabled={layout.width !== 0 && gestureEnabled}\n              onGestureEvent={handleGestureEvent}\n              onHandlerStateChange={this.handleGestureStateChange}\n              {...this.gestureActivationCriteria()}\n            >\n              <Animated.View style={[styles.container, cardStyle]}>\n                {shadowEnabled && shadowStyle && !isTransparent ? (\n                  <Animated.View\n                    style={[\n                      styles.shadow,\n                      gestureDirection === 'horizontal'\n                        ? [styles.shadowHorizontal, styles.shadowLeft]\n                        : gestureDirection === 'horizontal-inverted'\n                        ? [styles.shadowHorizontal, styles.shadowRight]\n                        : gestureDirection === 'vertical'\n                        ? [styles.shadowVertical, styles.shadowTop]\n                        : [styles.shadowVertical, styles.shadowBottom],\n                      { backgroundColor },\n                      shadowStyle,\n                    ]}\n                    pointerEvents=\"none\"\n                  />\n                ) : null}\n                <CardSheet\n                  ref={this.contentRef}\n                  enabled={pageOverflowEnabled}\n                  layout={layout}\n                  style={contentStyle}\n                >\n                  {children}\n                </CardSheet>\n              </Animated.View>\n            </PanGestureHandler>\n          </Animated.View>\n        </View>\n      </CardAnimationContext.Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3,\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: { width: -1, height: 1 },\n  },\n  shadowLeft: {\n    left: 0,\n  },\n  shadowRight: {\n    right: 0,\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: { width: 1, height: -1 },\n  },\n  shadowTop: {\n    top: 0,\n  },\n  shadowBottom: {\n    bottom: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}